{"version":3,"sources":["hooks/useCachedConnection.tsx","hooks/config.tsx","hooks/useEthereum.tsx","hooks/useEthereumReadOnly.tsx","UserInfo/UserInfo.tsx","NetworkStatus/NetworkStatus.tsx","Body/Title.tsx","utils/tictactie.tsx","hooks/useErrorMessage.tsx","Play/Play.tsx","utils/countries.tsx","Challenge/Challenge.tsx","utils/links.tsx","Mint/Mint.tsx","RightPanel/RightPanel.tsx","MintTie/MintTie.tsx","MintFinal/MintFinal.tsx","hooks/useImageSVG.tsx","Board/Board.tsx","SetBoard/SetBoard.tsx","hooks/useAsync.tsx","GameStatus/GameStatus.tsx","Body/Body.tsx","hooks/useLocalStorage.tsx","App/App.tsx","reportWebVitals.ts","theme/index.tsx","static/About.tsx","static/Rules.tsx","static/Ties.tsx","static/Prize.tsx","static/Peace.tsx","Header/Punchline.tsx","Header/Header.tsx","Footer/Footer.tsx","PeaceDivider/PeaceDivider.tsx","static/Follow.tsx","index.tsx"],"names":["useCachedConnection","useState","alreadyConnected","setAlreadyConnected","useEffect","a","window","ethereum","tempProvider","Web3Provider","listAccounts","existingAccounts","length","CONTRACT_ADDRESS","process","ABI","useEthereum","requiresConnection","provider","setProvider","contract","setContract","signer","setSigner","accounts","setAccounts","rejected","setRejected","chainId","setChainId","network","setNetwork","resetSigner","newSigner","getSigner","getAddress","undefined","getNetwork","name","networkName","init","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","cacheProvider","connect","instance","newProvider","on","Contract","useEthereumReadOnly","JsonRpcProvider","UserInfo","props","address","setAddress","className","NetworkStatus","NETWORK","isError","hidden","Title","variant","rest","styles","useStyleConfig","__css","interact","onWait","onFailure","onSuccess","method","tx","wait","receipt","errorStarts","indexOf","errorEnds","substring","Error","message","includes","errorObj","JSON","parse","error","getDidWinEvent","filter","filters","DidWin","events","e","topics","args","getDidTieEvent","getSupply","mintable","BigNumber","from","supply","getOpponent","tokenId","response","toNumber","isTurn","isBoardTurn","console","log","isOwnerOf","ownerOf","getMintableTies","mintableTies","getVictories","victories","getWhoAbandoned","whoAbandoned","getBoardSVGs","getAllBoardsSVG","svgs","i","r","json","slice","svg","push","replace","useErrorMessage","toast","useToast","finalMessage","code","key","title","status","isClosable","Play","setTokenId","coordinate","setCoordinate","waiting","setWaiting","inputInvalid","setInputInvalid","setError","play","winEvent","tieEvent","setRound","setOpponent","round","updateTurn","setIsAccountTurn","direction","src","isInvalid","borderBottomColor","height","marginTop","placeholder","value","onChange","event","target","isLoading","isDisabled","isAccountTurn","onClick","width","COUNTRIES","FLAGS","countryToId","country","tokenIdToFlag","Challenge","setCountry","opponentId","challenge","fontSize","borderColor","toLowerCase","REACT_APP_NETWOR","openSeaCollection","Mint","boardId","minted","setJustMinted","minting","setMinting","ethers","utils","parseEther","mint","href","RightPanel","fee","setFee","handleChange","handleClick","setDonation","textAlign","lineHeight","color","userAddress","isExternal","to","donation","marginRight","defaultValue","precision","min","step","renderContainer","MintTie","setMintableTies","fetchMintableTies","nTies","mintTie","style","MintFinal","setVictories","fetchVictories","newVictories","redeemFinalPrize","opponent","useImageSVG","imageSVG","setImageSVG","fetchImage","tokenURI","Board","ratio","dangerouslySetInnerHTML","__html","borderWidth","SetBoard","asyncFn","isActive","then","data","GameStatus","expiresInSeconds","setExpiresInSeconds","setWhoAbandoned","setIsLoadin","fetchExpiryBlock","expiryBlock","epxirationBlock","getBlockNumber","currentBlock","checkAbandoned","abandoned","setAbandoned","endGame","victorious","onComplete","date","Date","now","Body","setSupply","initialValue","item","localStorage","getItem","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","justMinted","boardSVGs","setBoardSVGs","colors","isMinted","BigInt","contractReadOnly","newAddress","parseInt","removeItem","pb","pt","didConnect","toString","match","backgroundColor","ml","setDidConnect","w","paddingLeft","renderSetBoard","renderChallenge","columns","gap","Array","keys","map","colStart","rowStart","Math","floor","App","cachedConnection","maxWidth","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","global","body","fontFamily","textDecoration","radii","none","sm","base","md","lg","xl","full","components","PunchlineComponent","baseStyle","display","fontWeight","TitleComponent","p","variants","normal","negative","defaultProps","Button","transition","_focus","boxShadow","_disabled","bgColor","outline","About","Rules","size","Ties","Prize","Peace","Punchline","Header","marginBottom","mr","align","justifyContent","Footer","PeaceDivider","Follow","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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D,WAChB,CAAChD,EAAMgD,UAEVtG,qBAAU,WACR,sBAAC,sBAAAC,EAAA,0DACKe,IAAYsF,EADjB,gCAESiD,EAAWvI,EAAUsF,GAF9B,0CAAD,KAKC,CAACA,EAAStF,IAiDX,eAAC,IAAD,CAAMyI,UAAU,SAAhB,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAOC,IAAK,gBAAwB,IACpC,cAAC,IAAD,CACEC,UAAWb,EACXc,kBAAkB,QAClBC,OAAO,OACPC,UAAU,MACVC,YAAY,IACZC,MAAOtB,GAAc,GACrBuB,SA5Ee,SAACC,GAAD,OAAgBvB,EAAcuB,EAAMC,OAAOH,UA8E5D,cAAC,IAAD,CACEI,UAAWxB,EACXyB,YAAa/G,EAAMgH,cACnBC,QAxFwB,2CAyFxBxG,QAAQ,UACR8F,OAAO,OACPW,MAAM,OANR,SAQGlH,EAAMgH,cAAgB,OAAS,SAElC,2BCpHAG,GAAY,CAChB,UACA,QACA,QACA,WACA,UACA,UACA,WACA,UACA,WACA,QACA,YACA,SACA,SACA,cACA,eACA,SACA,iBACA,gBACA,YACA,UACA,QACA,WACA,aACA,OACA,qBACA,UACA,QACA,cACA,YACA,QACA,WACA,OACA,UACA,UACA,SACA,WACA,YACA,SACA,WACA,OACA,eACA,SACA,UACA,YACA,UACA,UACA,UACA,QACA,iBACA,UACA,UACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,YACA,aACA,UACA,kBACA,aACA,SACA,cACA,SACA,YACA,QACA,WACA,WAGIC,GAAQ,CACZ,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2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","file":"static/js/main.17ee06f0.chunk.js","sourcesContent":["import { Web3Provider } from \"@ethersproject/providers\";\nimport { useEffect, useState } from \"react\";\n\nfunction useCachedConnection() {\n  const [alreadyConnected, setAlreadyConnected] = useState<boolean>(false);\n\n  useEffect(() => {\n    (async () => {\n      if (window.ethereum) {\n        const tempProvider = new Web3Provider(window.ethereum);\n        const existingAccounts = await tempProvider.listAccounts();\n        setAlreadyConnected(existingAccounts.length > 0);\n      }\n\n      return setAlreadyConnected(false);\n    })();\n  }, []);\n\n  return alreadyConnected;\n}\n\nexport default useCachedConnection;\n","export const CONTRACT_ADDRESS = process.env.REACT_APP_CONTRACT_ADDRESS!;\n\nexport const ABI = [\n  \"function mint(uint256) public payable\",\n  \"function tokenURI(uint256) public view returns (string memory)\",\n  \"function mintable() public view returns (uint256)\",\n  \"event Transfer(address indexed, address indexed, uint)\",\n  \"event DidWin(address indexed from, uint256 indexed winningBoard, uint256 indexed losingBoard)\",\n  \"event DidTie(address indexed from, uint256 indexed board1, uint256 indexed board2)\",\n  \"function getOpponent(uint256 boardIndex) public view returns (uint256)\",\n  \"function expiryBlock(uint256) public view returns (uint256)\",\n  \"function balanceOf(address) public view returns (uint256)\",\n  \"function ownerOf(uint256 tokenId) public view returns (address)\",\n  \"function challenge(uint256, uint256) public\",\n  \"function isBoardTurn(uint256) public view returns (bool)\",\n  \"function getAllBoardsSVG(uint256) public view returns (string[70] memory)\",\n  \"function play(uint256, uint16) public\",\n  \"function mintableTies(uint256) public view returns (uint256)\",\n  \"function mintTie(uint256 boardIndex) payable public\",\n  \"function victories(uint256) public view returns (uint256)\",\n  \"function whoAbandoned(uint256 boardIndex) public view returns (uint256)\",\n  \"function endGame(uint256 boardIndex) public\",\n  \"function redeemFinalPrize(uint256 boardIndex) external\",\n];\n","import { useState, useEffect } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport { JsonRpcSigner } from \"@ethersproject/providers/src.ts\";\nimport { Contract } from \"ethers\";\nimport { ABI, CONTRACT_ADDRESS } from \"./config\";\n\nfunction useEthereum(\n  requiresConnection: boolean\n): [\n  provider: JsonRpcProvider | undefined,\n  signer: JsonRpcSigner | undefined,\n  network: string | undefined,\n  contract: Contract | undefined,\n  rejected: boolean\n] {\n  const [provider, setProvider] = useState<JsonRpcProvider | undefined>();\n  const [contract, setContract] = useState<Contract>();\n  const [signer, setSigner] = useState<JsonRpcSigner | undefined>();\n  const [accounts, setAccounts] = useState<string[]>();\n  const [rejected, setRejected] = useState<boolean>(false);\n  const [chainId, setChainId] = useState<number>();\n  const [network, setNetwork] = useState<string>();\n\n  useEffect(() => {\n    (async () => {\n      async function resetSigner() {\n        try {\n          const newSigner = provider?.getSigner();\n          await newSigner?.getAddress();\n          setSigner(newSigner);\n        } catch {\n          setProvider(undefined);\n          setSigner(undefined);\n        }\n      }\n\n      await resetSigner();\n    })();\n  }, [provider, accounts]);\n\n  useEffect(() => {\n    (async () => {\n      const networkName = (await provider?.getNetwork())?.name;\n      setNetwork(networkName);\n    })();\n  }, [chainId, provider]);\n\n  useEffect(() => {\n    (async () => {\n      if (requiresConnection) {\n        async function init() {\n          try {\n            const INFURA_ID = process.env.REACT_APP_INFURA_ID;\n\n            const providerOptions = {\n              walletconnect: {\n                package: WalletConnectProvider,\n                options: {\n                  infuraId: INFURA_ID,\n                },\n              },\n            };\n\n            const web3Modal = new Web3Modal({\n              network: \"any\",\n              cacheProvider: true,\n              providerOptions,\n            });\n\n            const instance = await web3Modal.connect();\n            setRejected(false);\n\n            const newProvider = new Web3Provider(instance, \"any\");\n            setProvider(newProvider);\n\n            instance.on(\"accountsChanged\", async (accounts: string[]) => {\n              setAccounts(accounts);\n            });\n\n            instance.on(\"chainChanged\", async (chainId: number) => {\n              setChainId(chainId);\n            });\n          } catch {\n            setRejected(true);\n          }\n        }\n\n        await init();\n      } else {\n        setProvider(undefined);\n      }\n    })();\n  }, [requiresConnection]);\n\n  useEffect(() => {\n    (async () => {\n      const contract = signer\n        ? new Contract(CONTRACT_ADDRESS, ABI, signer)\n        : undefined;\n      setContract(contract);\n    })();\n  }, [signer]);\n\n  return [provider, signer, network, contract, rejected];\n}\n\nexport default useEthereum;\n","import { useState, useEffect } from \"react\";\nimport { JsonRpcProvider } from \"@ethersproject/providers\";\nimport { Contract } from \"ethers\";\nimport { ABI, CONTRACT_ADDRESS } from \"./config\";\n\nfunction useEthereumReadOnly(): [contract: Contract | undefined] {\n  const [contract, setContract] = useState<Contract>();\n\n  useEffect(() => {\n    (async () => {\n      async function init() {\n        const newProvider = new JsonRpcProvider(\n          process.env.REACT_APP_INFURA_RPC,\n          process.env.REACT_APP_NETWORK\n        );\n\n        const contract = new Contract(CONTRACT_ADDRESS, ABI, newProvider);\n        setContract(contract);\n      }\n\n      await init();\n    })();\n  }, []);\n\n  return [contract];\n}\n\nexport default useEthereumReadOnly;\n","import { useState, useEffect } from \"react\";\nimport \"./UserInfo.css\";\n\ntype UserInfoProps = {\n  address: string | undefined;\n};\n\nfunction UserInfo(props: UserInfoProps) {\n  const [address, setAddress] = useState<string>();\n\n  useEffect(() => {\n    setAddress(props.address);\n  }, [props.address]);\n\n  return (\n    <div className=\"UserInfo\">\n      <span>Connected account: {address}</span>\n    </div>\n  );\n}\n\nexport default UserInfo;\n","import { useState, useEffect } from \"react\";\nimport \"./NetworkStatus.css\";\n\ntype NetworkStatusProps = {\n  network: string | undefined;\n};\n\nfunction NetworkStatus(props: NetworkStatusProps) {\n  const NETWORK = process.env.REACT_APP_NETWORK;\n\n  const [network, setNetwork] = useState<string>();\n\n  useEffect(() => {\n    setNetwork(props.network);\n  }, [props.network]);\n\n  function isError() {\n    return NETWORK !== network && network !== undefined;\n  }\n\n  return (\n    <div className=\"NetworkStatus\" hidden={!isError()}>\n      {isError() && (\n        <div className=\"error-banner\">\n          <span className=\"error-text\">\n            You are connected to {network} whilst you should be connected to{\" \"}\n            {NETWORK}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default NetworkStatus;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\n\nexport function Title(props: any) {\n  const { variant, ...rest } = props;\n\n  const styles = useStyleConfig(\"TitleComponent\", { variant });\n\n  // Pass the computed styles into the `__css` prop\n  return <Box __css={styles} {...rest} />;\n}\n","import { BigNumber, Contract, ContractReceipt } from \"ethers\";\n\ntype ContractError = Record<\"data\", Record<\"message\", string>>;\ntype MetamaskError = Record<\"message\", string>;\ntype EtherjsError = {\n  message: string;\n  code: string;\n};\n\nexport async function interact(\n  onWait: () => any,\n  onFailure: (error: string | undefined) => any,\n  onSuccess: (receipt: ContractReceipt) => any,\n  method: () => any\n) {\n  try {\n    const tx = await method();\n\n    onWait();\n\n    const receipt = await tx.wait(1);\n    await onSuccess(receipt);\n  } catch (e) {\n    if (typeof e === \"string\") {\n      const errorStarts = e.indexOf(\"error=\") + 6;\n      const errorEnds = e.indexOf(\",code=\");\n\n      onFailure(e.substring(errorStarts, errorEnds));\n      return;\n    }\n\n    if (e instanceof Error) {\n      if (e.message.includes(\"insufficient funds\")) {\n        onFailure(\"Insufficient Funds\");\n        return;\n      }\n\n      try {\n        const errorStarts = e.message.indexOf(\"error=\") + 6;\n        const errorEnds = e.message.indexOf(\", code=\");\n        const errorObj = JSON.parse(\n          e.message.substring(errorStarts, errorEnds)\n        );\n        onFailure(errorObj[\"data\"][\"originalError\"][\"message\"]);\n        return;\n      } catch {}\n    }\n\n    const error = e as MetamaskError | ContractError | EtherjsError;\n    if (\"data\" in error) {\n      onFailure(error[\"data\"][\"message\"]);\n    } else {\n      onFailure(error[\"message\"]);\n    }\n  }\n}\n\nexport function getDidWinEvent(contract: Contract, receipt: ContractReceipt) {\n  const filter = contract.filters.DidWin(contract.address);\n  for (const e of receipt.events || []) {\n    if (\n      e.address === filter.address &&\n      // `filter.topics` is set\n      e.topics[0] === filter.topics![0]\n    ) {\n      return e.args![\"winningBoard\"] as BigNumber;\n    }\n  }\n}\n\nexport function getDidTieEvent(contract: Contract, receipt: ContractReceipt) {\n  const filter = contract.filters.DidWin(contract.address);\n  for (const e of receipt.events || []) {\n    if (\n      e.address === filter.address &&\n      // `filter.topics` is set\n      e.topics[0] === filter.topics![0]\n    ) {\n      return e.args![\"board1\"] as BigNumber;\n    }\n  }\n}\n\nexport async function getSupply(contract: Contract | undefined) {\n  if (contract) {\n    const supply = (await contract.mintable()) || BigNumber.from(0);\n\n    return supply;\n  }\n\n  return undefined;\n}\n\nexport async function getOpponent(contract: Contract, tokenId: number) {\n  const response = await contract.getOpponent(tokenId);\n  return response.toNumber();\n}\n\nexport async function isTurn(contract: Contract, tokenId: number) {\n  try {\n    const response = await contract.isBoardTurn(tokenId);\n    return response;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function isOwnerOf(contract: Contract, tokenId: number) {\n  try {\n    const response = await contract.ownerOf(tokenId);\n    return response === (await contract.signer.getAddress());\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function getMintableTies(contract: Contract, tokenId: number) {\n  try {\n    const response = await contract.mintableTies(tokenId);\n    return response.toNumber();\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function getVictories(contract: Contract, tokenId: number) {\n  try {\n    const response = await contract.victories(tokenId);\n    return response.toNumber();\n  } catch (e) {\n    console.log(e);\n    return 5;\n  }\n}\n\nexport async function getWhoAbandoned(\n  contract: Contract | undefined,\n  tokenId: number\n) {\n  try {\n    if (contract) {\n      const whoAbandoned = await contract.whoAbandoned(tokenId);\n      return whoAbandoned.toNumber();\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function getBoardSVGs(\n  contract: Contract\n): Promise<string[] | undefined> {\n  try {\n    const response = await contract.getAllBoardsSVG(1);\n    const svgs = [];\n    for (var i = 0; i < 70; i++) {\n      var r = response[i];\n      let json = JSON.parse(r.slice(16));\n      let svg = json[\"image\"];\n\n      svgs.push(\n        svg\n          .replace(/xo/g, \"xo\" + i)\n          .replace(/bg/g, \"bg\" + i)\n          .replace(/fg/g, \"fg\" + i)\n          .replace(/hash/g, \"hash\" + i)\n          .replace(/xoline/g, \"xoline\" + i)\n          .replace(/id='o'/g, `id='o${i}'`)\n          .replace(/id='x'/g, `id='x${i}'`)\n          .replace(/'#o'/g, `'#o${i}'`)\n          .replace(/'#x'/g, `'#x${i}'`)\n          .replace(/pulse/g, \"pulse\" + i)\n      );\n    }\n    return svgs;\n  } catch (e) {\n    console.log(e);\n  }\n}\n","import { useToast } from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\n\nfunction getError(key: string) {\n  if (\"E1\" === key) {\n    return \"Caller is not the artist.\";\n  }\n  if (\"E2\" === key) {\n    return \"You don't own this board.\";\n  }\n  if (\"E3\" === key) {\n    return \"Prize already redeemed\";\n  }\n  if (\"E4\" === key) {\n    return \"Not enough victories\";\n  }\n  if (\"E5\" === key) {\n    return \"No mintable ties\";\n  }\n  if (\"E6\" === key) {\n    return \"No more ties\";\n  }\n  if (\"E7\" === key) {\n    return \"Not enough eth\";\n  }\n  if (\"E8\" === key) {\n    return \"Id out of range\";\n  }\n  if (\"E9\" === key) {\n    return \"No self-challenge.\";\n  }\n  if (\"E10\" === key) {\n    return \"Challenge someone else before trying against the same again.\";\n  }\n  if (\"E11\" === key) {\n    return \"The board you are challenging is not owened by anyone yet.\";\n  }\n  if (\"E12\" === key) {\n    return \"A player already playing\";\n  }\n  if (\"E13\" === key) {\n    return \"A player not playing\";\n  }\n  if (\"E14\" === key) {\n    return \"No opponent\";\n  }\n  if (\"E15\" === key) {\n    return \"Opponent didn't abandon\";\n  }\n  if (\"E16\" === key) {\n    return \"Invalid move\";\n  }\n  if (\"E17\" === key) {\n    return \"Game is over\";\n  }\n  if (\"E18\" === key) {\n    return \"Time is up\";\n  }\n  if (\"E19\" === key) {\n    return \"Opponent abandoned\";\n  }\n  if (\"E20\" === key) {\n    return \"Not your turn\";\n  }\n  if (\"E21\" === key) {\n    return \"The coordinate is occupied.\";\n  }\n  if (\"E22\" === key) {\n    return \"Nonexistent token\";\n  }\n}\n\nfunction useErrorMessage(message: string | undefined) {\n  const toast = useToast();\n\n  useEffect(() => {\n    if (message) {\n      let finalMessage: string | undefined = message;\n\n      if (message.indexOf(\"execution reverted: \") > -1) {\n        const code = message.replace(\"execution reverted: \", \"\");\n        finalMessage = getError(code);\n        if (finalMessage === undefined) {\n          finalMessage = message;\n        }\n      }\n      toast({\n        title: finalMessage,\n        status: \"error\",\n        isClosable: true,\n      });\n    }\n  }, [message, toast]);\n}\n\nexport default useErrorMessage;\n","import { Image, Flex, Input, Button, Spacer } from \"@chakra-ui/react\";\nimport { Contract, ContractReceipt } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport {\n  isTurn,\n  interact,\n  getDidWinEvent,\n  getDidTieEvent,\n} from \"../utils/tictactie\";\nimport useErrorMessage from \"../hooks/useErrorMessage\";\n\ntype PlayProps = {\n  contract: Contract | undefined;\n  tokenId: number;\n  round: number;\n  setRound: (round: number) => void;\n  isAccountTurn: boolean;\n  setIsAccountTurn: (isAccountTurn: boolean) => void;\n  setOpponent: (opponentId: number | undefined) => void;\n};\n\nfunction Play(props: PlayProps) {\n  const [contract, setContract] = useState<Contract>();\n  const [tokenId, setTokenId] = useState<number>();\n  const [coordinate, setCoordinate] = useState<number>();\n  const [waiting, setWaiting] = useState(false);\n  const [inputInvalid, setInputInvalid] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const handleChange = (event: any) => setCoordinate(event.target.value);\n  useErrorMessage(error);\n\n  useEffect(() => {\n    setContract(props.contract);\n  }, [props.contract]);\n\n  useEffect(() => {\n    setTokenId(props.tokenId);\n  }, [props.tokenId]);\n\n  useEffect(() => {\n    (async () => {\n      if (contract && tokenId) {\n        await updateTurn(contract, tokenId);\n      }\n    })();\n  }, [tokenId, contract]);\n\n  async function handleClick() {\n    if (coordinate) {\n      setInputInvalid(false);\n      await play(coordinate);\n    } else {\n      setInputInvalid(true);\n    }\n  }\n\n  async function play(coordinate: number) {\n    if (contract && tokenId) {\n      setWaiting(false);\n      setError(undefined);\n      interact(\n        () => setWaiting(true),\n        (e) => {\n          setError(e);\n        },\n        async (receipt: ContractReceipt) => {\n          const winEvent = getDidWinEvent(contract, receipt);\n          const tieEvent = getDidTieEvent(contract, receipt);\n          if (!winEvent && !tieEvent) {\n            props.setRound(props.round + 1);\n          } else {\n            props.setRound(0);\n\n            if (winEvent) {\n              props.setOpponent(undefined);\n            }\n          }\n          setWaiting(false);\n          setError(undefined);\n          setCoordinate(undefined);\n          return await updateTurn(contract, tokenId);\n        },\n        async () => {\n          return await contract.play(tokenId, 1 << coordinate);\n        }\n      );\n    }\n  }\n\n  async function updateTurn(contract: Contract, tokenId: number) {\n    props.setIsAccountTurn(await isTurn(contract, tokenId));\n  }\n\n  return (\n    <Flex direction=\"column\">\n      <Spacer />\n      <Image src={\"/sample.svg\"}></Image>{\" \"}\n      <Input\n        isInvalid={inputInvalid}\n        borderBottomColor=\"black\"\n        height=\"50px\"\n        marginTop=\"15%\"\n        placeholder=\"#\"\n        value={coordinate || \"\"}\n        onChange={handleChange}\n      />\n      <Button\n        isLoading={waiting}\n        isDisabled={!props.isAccountTurn}\n        onClick={handleClick}\n        variant=\"outline\"\n        height=\"50px\"\n        width=\"100%\"\n      >\n        {props.isAccountTurn ? \"PLAY\" : \"WAIT\"}\n      </Button>\n      <br />\n    </Flex>\n  );\n}\n\nexport default Play;\n","const COUNTRIES = [\n  \"Germany\",\n  \"Italy\",\n  \"Japan\",\n  \"Bulgaria\",\n  \"Hungary\",\n  \"Romania\",\n  \"Slovakia\",\n  \"Austria\",\n  \"Ethiopia\",\n  \"China\",\n  \"Australia\",\n  \"Brazil\",\n  \"Canada\",\n  \"New Zealand\",\n  \"South Africa\",\n  \"Russia\",\n  \"United Kingdom\",\n  \"United States\",\n  \"Argentina\",\n  \"Bolivia\",\n  \"Chile\",\n  \"Colombia\",\n  \"Costa Rica\",\n  \"Cuba\",\n  \"Dominican Republic\",\n  \"Ecuador\",\n  \"Egypt\",\n  \"El Salvador\",\n  \"Guatemala\",\n  \"Haiti\",\n  \"Honduras\",\n  \"Iraq\",\n  \"Lebanon\",\n  \"Liberia\",\n  \"Mexico\",\n  \"Mongolia\",\n  \"Nicaragua\",\n  \"Panama\",\n  \"Paraguay\",\n  \"Peru\",\n  \"Saudi Arabia\",\n  \"Turkey\",\n  \"Uruguay\",\n  \"Venezuela\",\n  \"Algeria\",\n  \"Albania\",\n  \"Belgium\",\n  \"Burma\",\n  \"Czech Republic\",\n  \"Denmark\",\n  \"Estonia\",\n  \"Finland\",\n  \"France\",\n  \"Greece\",\n  \"Iceland\",\n  \"India\",\n  \"Iran\",\n  \"Latvia\",\n  \"Lithuania\",\n  \"Luxembourg\",\n  \"Morocco\",\n  \"The Netherlands\",\n  \"New Guinea\",\n  \"Norway\",\n  \"Philippines\",\n  \"Poland\",\n  \"Singapore\",\n  \"Syria\",\n  \"Thailand\",\n  \"Tunisia\",\n];\n\nconst FLAGS = [\n  \"🇩🇪\",\n  \"🇮🇹\",\n  \"🇯🇵\",\n  \"🇧🇬\",\n  \"🇭🇺\",\n  \"🇷🇴\",\n  \"🇸🇰\",\n  \"🇦🇹\",\n  \"🇪🇹\",\n  \"🇨🇳\",\n  \"🇦🇺\",\n  \"🇧🇷\",\n  \"🇨🇦\",\n  \"🇳🇿\",\n  \"🇿🇦\",\n  \"🇷🇺\",\n  \"🇬🇧\",\n  \"🇺🇸\",\n  \"🇦🇷\",\n  \"🇧🇴\",\n  \"🇨🇱\",\n  \"🇨🇴\",\n  \"🇨🇷\",\n  \"🇨🇺\",\n  \"🇩🇴\",\n  \"🇪🇨\",\n  \"🇪🇬\",\n  \"🇸🇻\",\n  \"🇬🇹\",\n  \"🇭🇹\",\n  \"🇭🇳\",\n  \"🇮🇶\",\n  \"🇱🇧\",\n  \"🇱🇷\",\n  \"🇲🇽\",\n  \"🇲🇳\",\n  \"🇳🇮\",\n  \"🇵🇦\",\n  \"🇵🇾\",\n  \"🇵🇪\",\n  \"🇸🇦\",\n  \"🇹🇷\",\n  \"🇺🇾\",\n  \"🇻🇪\",\n  \"🇩🇿\",\n  \"🇦🇱\",\n  \"🇧🇪\",\n  \"🇲🇲\",\n  \"🇨🇿\",\n  \"🇩🇰\",\n  \"🇪🇪\",\n  \"🇫🇮\",\n  \"🇫🇷\",\n  \"🇬🇷\",\n  \"🇮🇸\",\n  \"🇮🇳\",\n  \"🇮🇷\",\n  \"🇱🇻\",\n  \"🇱🇹\",\n  \"🇱🇺\",\n  \"🇲🇦\",\n  \"🇳🇱\",\n  \"🇵🇬\",\n  \"🇳🇴\",\n  \"🇵🇭\",\n  \"🇵🇱\",\n  \"🇸🇬\",\n  \"🇸🇾\",\n  \"🇹🇭\",\n  \"🇹🇳\",\n];\n\nexport function countryToId(country: string) {\n  var tokenId = FLAGS.indexOf(country);\n  if (tokenId === -1) {\n    tokenId = COUNTRIES.indexOf(country);\n  }\n  return tokenId + 1;\n}\n\nexport function tokenIdToFlag(tokenId: number) {\n  return FLAGS[tokenId - 1];\n}\n\nexport function tokenIdToCountry(tokenId: number) {\n  return COUNTRIES[tokenId - 1];\n}\n","import { Input, Button, Container } from \"@chakra-ui/react\";\nimport { Contract } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport { interact } from \"../utils/tictactie\";\nimport { countryToId } from \"../utils/countries\";\nimport useErrorMessage from \"../hooks/useErrorMessage\";\n\ntype ChallengeProps = {\n  contract: Contract | undefined;\n  tokenId: number;\n  setOpponent: (opponentId: number) => void;\n};\n\nfunction Challenge(props: ChallengeProps) {\n  const [contract, setContract] = useState<Contract>();\n  const [tokenId, setTokenId] = useState<number>();\n  const [waiting, setWaiting] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  useErrorMessage(error);\n  const [country, setCountry] = useState(\"\");\n  const handleChange = (event: any) => setCountry(event.target.value);\n  const [inputInvalid, setInputInvalid] = useState(false);\n\n  useEffect(() => {\n    setContract(props.contract);\n  }, [props.contract]);\n\n  useEffect(() => {\n    setTokenId(props.tokenId);\n  }, [props.tokenId]);\n\n  async function handleClick() {\n    if (country) {\n      setInputInvalid(false);\n      const opponentId = countryToId(country);\n      await challenge(opponentId);\n    } else {\n      setInputInvalid(true);\n    }\n  }\n\n  async function challenge(opponentId: number) {\n    if (contract && tokenId) {\n      setError(undefined);\n      setWaiting(false);\n\n      interact(\n        () => setWaiting(true),\n        (error) => setError(error),\n        () => {\n          setWaiting(false);\n          props.setOpponent(opponentId);\n        },\n        async () => {\n          return await contract.challenge(tokenId, opponentId, {\n            from: await contract.signer.getAddress(),\n          });\n        }\n      );\n    }\n  }\n\n  return (\n    <Container>\n      Wait to be challenged.\n      <br />\n      Or{\" \"}\n      <Button\n        onClick={handleClick}\n        isLoading={waiting}\n        fontSize={12}\n        width=\"7em\"\n        height=\"20px\"\n      >\n        challenge\n      </Button>{\" \"}\n      a{\" \"}\n      <Input\n        isInvalid={inputInvalid}\n        value={country}\n        onChange={handleChange}\n        borderColor=\"transparent\"\n        borderBottomColor=\"black\"\n        height=\"20px\"\n        fontSize={12}\n        width=\"13em\"\n        placeholder=\"Country or Flag\"\n      ></Input>\n    </Container>\n  );\n}\n\nexport default Challenge;\n","const CONTRACT_ADDRESS = process.env.REACT_APP_CONTRACT_ADDRESS!.toLowerCase();\nconst NETWORK = process.env.REACT_APP_NETWOR!;\n\nexport function openSeaCollection() {\n  if (NETWORK === \"homestead\") {\n    return \"https://opensea.io/collection/tictactie\";\n  } else {\n    return \"https://testnets.opensea.io/collection/tictactie\";\n  }\n}\n\nexport function openSeaProfile(userAddress: string) {\n  if (NETWORK === \"homestead\") {\n    return `https://opensea.io/${userAddress.toLowerCase()}`;\n  } else {\n    return `https://testnets.opensea.io/${userAddress.toLowerCase()}`;\n  }\n}\n\nexport function openSeaBoard(boardId: number) {\n  if (NETWORK === \"homestead\") {\n    return `https://opensea.io/assets/${CONTRACT_ADDRESS}/${boardId}`;\n  } else {\n    return `https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${boardId}`;\n  }\n}\n","import { useState } from \"react\";\nimport \"./Mint.css\";\nimport { Button, Box, HStack, Link } from \"@chakra-ui/react\";\nimport { Contract, ethers } from \"ethers\";\nimport { tokenIdToFlag } from \"../utils/countries\";\nimport { interact } from \"../utils/tictactie\";\nimport { openSeaBoard } from \"../utils/links\";\nimport useErrorMessage from \"../hooks/useErrorMessage\";\n\ntype MintProps = {\n  tokenId: number;\n  minted: boolean;\n  setJustMinted: (didMint: boolean) => void;\n  setTokenId: (tokenId: number) => void;\n  contract: Contract | undefined;\n};\n\nfunction Mint({\n  tokenId,\n  minted,\n  setJustMinted,\n  setTokenId,\n  contract,\n}: MintProps) {\n  const [minting, setMinting] = useState(false);\n  const [error, setError] = useState<string>();\n  useErrorMessage(error);\n\n  async function mint(tokenId: number) {\n    if (contract) {\n      interact(\n        () => {\n          setMinting(true);\n          setError(undefined);\n        },\n        (error) => setError(error),\n        () => {\n          setMinting(false);\n          setJustMinted(true);\n          setTokenId(tokenId);\n        },\n        async () => {\n          return await contract!.mint(tokenId, {\n            value: ethers.utils.parseEther(\n              process.env.REACT_APP_PRICE || \"0.001\"\n            ),\n            from: await contract.signer.getAddress(),\n          });\n        }\n      );\n    }\n  }\n\n  return (\n    <div className=\"Mint\">\n      <HStack>\n        <Button\n          onClick={() => mint(tokenId)}\n          height=\"20px\"\n          width=\"80%\"\n          isDisabled={minted || !contract}\n          isLoading={minting}\n        >\n          {minted ? <Link href={openSeaBoard(tokenId)}>VIEW</Link> : \"MINT!\"}\n        </Button>\n        <Box width=\"20%\" height=\"20px\">\n          {tokenIdToFlag(tokenId)}\n        </Box>\n      </HStack>\n      <br />\n    </div>\n  );\n}\n\nexport default Mint;\n","import {\n  Box,\n  Button,\n  Spacer,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  Flex,\n  Link,\n} from \"@chakra-ui/react\";\nimport { Contract } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport { openSeaProfile } from \"../utils/links\";\nimport { NavLink } from \"react-router-dom\";\n\ntype RightPanelProps = {\n  contract: Contract | undefined;\n  setDonation: (donation: string) => void;\n  donation: string;\n};\n\nfunction RightPanel(props: RightPanelProps) {\n  const [address, setAddress] = useState<string>();\n  const [fee, setFee] = useState<string>(\"0.0\");\n  const handleChange = (value: string) => setFee(value);\n\n  useEffect(() => {\n    (async () => {\n      if (props.contract) {\n        setAddress(await props.contract.signer.getAddress());\n      }\n    })();\n  }, [props.contract]);\n\n  function handleClick() {\n    if (fee) {\n      props.setDonation(fee);\n    }\n  }\n\n  function renderContainer() {\n    if (props.contract) {\n      return (\n        <Flex textAlign=\"right\" direction=\"column\" lineHeight={6}>\n          <Spacer />\n          {address && (\n            <Box>\n              Check your ties on{\" \"}\n              <Link color=\"blue.500\" href={openSeaProfile(address)} isExternal>\n                OpenSea.\n              </Link>{\" \"}\n            </Box>\n          )}\n          <Box>Want to prevent the next war?</Box>\n          <Box>\n            <NavLink to=\"/peace\">Make a donation</NavLink> when you mint a tie.\n          </Box>\n          <Box>Current donation fee: {props.donation} ETH</Box>\n          <Flex>\n            <Spacer />\n            <Button\n              onClick={handleClick}\n              fontSize={12}\n              width=\"30%\"\n              marginRight={2}\n              height={7}\n            >\n              SAVE\n            </Button>\n            <NumberInput\n              onChange={handleChange}\n              defaultValue={0}\n              precision={3}\n              min={0}\n              step={0.001}\n              width=\"35%\"\n              height={7}\n            >\n              <NumberInputField height={7} />\n              <NumberInputStepper>\n                <NumberIncrementStepper />\n                <NumberDecrementStepper />\n              </NumberInputStepper>\n            </NumberInput>\n          </Flex>\n        </Flex>\n      );\n    } else {\n      return <Box></Box>;\n    }\n  }\n\n  return renderContainer();\n}\n\nexport default RightPanel;\n","import { useState, useEffect } from \"react\";\nimport { Button, Container } from \"@chakra-ui/react\";\nimport { Contract } from \"ethers\";\nimport { interact, getMintableTies } from \"../utils/tictactie\";\nimport { parseEther } from \"ethers/lib/utils\";\nimport useErrorMessage from \"../hooks/useErrorMessage\";\n\ntype MintTieProps = {\n  tokenId: number | undefined;\n  contract: Contract | undefined;\n  isAccountTurn: boolean; // to refresh\n  donation: string;\n};\nfunction MintTie(props: MintTieProps) {\n  const [contract, setContract] = useState<Contract>();\n  const [minting, setMinting] = useState(false);\n  const [tokenId, setTokenId] = useState<number>();\n  const [mintableTies, setMintableTies] = useState<number>(0);\n  const [error, setError] = useState<string>();\n  useErrorMessage(error);\n\n  useEffect(() => {\n    (async () => {\n      if (props.contract && props.tokenId)\n        await fetchMintableTies(props.contract, props.tokenId);\n      else {\n        setMintableTies(0);\n      }\n    })();\n  }, [props.contract, props.tokenId, props.isAccountTurn]);\n\n  useEffect(() => {\n    setContract(props.contract);\n  }, [props.contract]);\n\n  useEffect(() => {\n    setTokenId(props.tokenId);\n  }, [mintableTies, props.tokenId]);\n\n  async function fetchMintableTies(contract: Contract, tokenId: number) {\n    const nTies = await getMintableTies(contract, tokenId);\n    setMintableTies(nTies);\n  }\n\n  async function mint(tokenId: number) {\n    if (contract) {\n      interact(\n        () => setMinting(true),\n        (error) => setError(error),\n        async () => {\n          setMinting(false);\n          await fetchMintableTies(props.contract!, props.tokenId!);\n        },\n        async () => {\n          return await contract.mintTie(tokenId, {\n            value: parseEther(props.donation),\n            from: await contract.signer.getAddress(),\n          });\n        }\n      );\n    }\n  }\n\n  function renderContent() {\n    if (mintableTies > 0) {\n      return (\n        <Container style={{ color: \"#B500D1\" }}>\n          <b>Hurray!</b> You have{\" \"}\n          <Button\n            onClick={() => mint(tokenId!)}\n            fontSize={12}\n            height=\"20px\"\n            isLoading={minting}\n          >\n            {mintableTies} ties to MINT!\n          </Button>\n        </Container>\n      );\n    } else {\n      return (\n        <Container>\n          <span style={{ color: \"#B500D1\" }}>\n            You have <b>0</b> mintable ties.\n          </span>\n          <br />\n          <span style={{ color: \"#4500AD\" }}>Play and tie to earn them.</span>\n        </Container>\n      );\n    }\n  }\n\n  return renderContent();\n}\n\nexport default MintTie;\n","import { useState, useEffect } from \"react\";\nimport { Button, Container } from \"@chakra-ui/react\";\nimport { Contract, ethers } from \"ethers\";\nimport { interact, getVictories } from \"../utils/tictactie\";\nimport { NavLink } from \"react-router-dom\";\nimport useErrorMessage from \"../hooks/useErrorMessage\";\n\ntype MintFinalProps = {\n  tokenId: number;\n  contract: Contract | undefined;\n  isAccountTurn: boolean;\n  donation: string;\n  opponent: number | undefined;\n};\n\nfunction MintFinal(props: MintFinalProps) {\n  const [minting, setMinting] = useState(false);\n  const [victories, setVictories] = useState<number>(5);\n  const [error, setError] = useState<string>();\n  useErrorMessage(error);\n\n  useEffect(() => {\n    (async () => {\n      if (props.contract && props.tokenId) {\n        await fetchVictories(props.contract, props.tokenId);\n      }\n    })();\n  }, [props.tokenId, props.contract, props.isAccountTurn, props.opponent]);\n\n  async function fetchVictories(contract: Contract, tokenId: number) {\n    const newVictories = await getVictories(contract, tokenId);\n    setVictories(newVictories);\n  }\n\n  async function mint(tokenId: number) {\n    if (props.contract) {\n      interact(\n        () => setMinting(true),\n        (error) => setError(error),\n        () => {\n          setMinting(false);\n        },\n        async () => {\n          return await props.contract!.redeemFinalPrize(tokenId, {\n            value: ethers.utils.parseEther(props.donation),\n            from: await props.contract!.signer.getAddress(),\n          });\n        }\n      );\n    }\n  }\n\n  function renderContent() {\n    if (victories === 5) {\n      return (\n        <Container>\n          <span style={{ color: \"#FF8C00\" }}>\n            You have a <b>level {victories}</b> board now.\n          </span>\n          <br />\n          <b>Hurray!</b> You have can now{\" \"}\n          <Button\n            onClick={() => mint(props.tokenId!)}\n            fontSize={12}\n            height=\"20px\"\n            isLoading={minting}\n          >\n            claim the Final Prize\n          </Button>\n        </Container>\n      );\n    } else {\n      return (\n        <Container>\n          {props.tokenId && (\n            <span style={{ color: \"#008F07\" }}>\n              You have a <b>level {victories}</b> board now.\n              <br />\n            </span>\n          )}\n          <span style={{ color: \"#FF8C00\" }}>\n            You need <b>{5 - victories}</b> {props.tokenId && \"more\"} victories{\" \"}\n            {!props.tokenId && \"in a row\"} to win the <br />\n            <b>\n              <NavLink to=\"/prize\">Final Prize.</NavLink>\n            </b>\n          </span>\n        </Container>\n      );\n    }\n  }\n\n  return renderContent();\n}\n\nexport default MintFinal;\n","import { useState, useEffect } from \"react\";\nimport { Contract } from \"ethers\";\n\nfunction useImageSVG(\n  contract: Contract | undefined,\n  tokenId: number | undefined,\n  round: number,\n  opponent: number | undefined\n): string | undefined {\n  const [imageSVG, setImageSVG] = useState<string>();\n\n  useEffect(() => {\n    (async () => {\n      if (contract && tokenId) await fetchImage(contract, tokenId);\n    })();\n  }, [contract, tokenId, round, opponent]);\n\n  async function fetchImage(contract: Contract, tokenId: number) {\n    const response = await contract.tokenURI(tokenId);\n    let json = JSON.parse(response.slice(16));\n    setImageSVG(json[\"image\"]);\n  }\n\n  return imageSVG;\n}\n\nexport default useImageSVG;\n","import { AspectRatio, Box } from \"@chakra-ui/react\";\nimport { Contract } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport useImageSVG from \"../hooks/useImageSVG\";\n\ntype BoardProps = {\n  contract: Contract | undefined;\n  tokenId: number;\n  round: number;\n  opponent: number | undefined;\n};\n\nfunction Board(props: BoardProps) {\n  const [contract, setContract] = useState<Contract>();\n  const [tokenId, setTokenId] = useState<number>();\n  const imageSVG = useImageSVG(contract, tokenId, props.round, props.opponent);\n\n  useEffect(() => {\n    setContract(props.contract);\n  }, [props.contract]);\n\n  useEffect(() => {\n    setTokenId(props.tokenId);\n  }, [props.tokenId]);\n\n  function renderContent() {\n    if (imageSVG) {\n      return <span dangerouslySetInnerHTML={{ __html: imageSVG }} />;\n    } else {\n      return <Box borderWidth={2} borderColor=\"black\" />;\n    }\n  }\n\n  return (\n    <Box>\n      <AspectRatio ratio={1}>{renderContent()}</AspectRatio>\n    </Box>\n  );\n}\n\nexport default Board;\n","import { Input, Button, Container } from \"@chakra-ui/react\";\nimport { Contract } from \"ethers\";\nimport { useState } from \"react\";\nimport { countryToId } from \"../utils/countries\";\nimport { useAsync } from \"../hooks/useAsync\";\nimport useErrorMessage from \"../hooks/useErrorMessage\";\n\ntype SetBoardProps = {\n  contract: Contract | undefined;\n  tokenId: number | undefined;\n  setTokenId: (tokenId: number) => void;\n};\n\nfunction SetBoard(props: SetBoardProps) {\n  const [country, setCountry] = useState(\"\");\n  const handleChange = (event: any) => setCountry(event.target.value);\n  const [address, setAddress] = useState<string>();\n  const [error, setError] = useState(\"\");\n  useErrorMessage(error);\n  const [inputInvalid, setInputInvalid] = useState(false);\n  useAsync(getAddress, setAddress);\n\n  async function getAddress() {\n    return await props.contract?.signer.getAddress();\n  }\n\n  async function handleClick() {\n    if (country) {\n      setInputInvalid(false);\n      try {\n        const tokenId = countryToId(country);\n        const owner = await props.contract?.ownerOf(tokenId);\n        if (owner === address) {\n          props.setTokenId(tokenId);\n        } else {\n          setError(\"Not your board!\");\n        }\n      } catch (e) {\n        setError(\"Not your board!\");\n      }\n    } else {\n      setInputInvalid(true);\n    }\n  }\n\n  function renderContent() {\n    if (props.tokenId) {\n      return <Container>Your board: {country}.</Container>;\n    } else {\n      return (\n        <Container>\n          Mint a board. Already have one?\n          <br />\n          <Button\n            onClick={async () => await handleClick()}\n            fontSize={12}\n            width=\"8em\"\n            height=\"22px\"\n          >\n            Restore it\n          </Button>{\" \"}\n          <Input\n            isInvalid={inputInvalid}\n            value={country}\n            onChange={handleChange}\n            borderColor=\"transparent\"\n            borderBottomColor=\"black\"\n            height=\"20px\"\n            fontSize={12}\n            width=\"40%\"\n            placeholder=\"Country or Flag\"\n          ></Input>{\" \"}\n        </Container>\n      );\n    }\n  }\n\n  return renderContent();\n}\n\nexport default SetBoard;\n","import { useEffect } from \"react\";\n\nexport function useAsync(asyncFn: any, onSuccess: any) {\n  useEffect(() => {\n    let isActive = true;\n    asyncFn().then((data: any) => {\n      if (isActive) onSuccess(data);\n    });\n    return () => {\n      isActive = false;\n    };\n  }, [asyncFn, onSuccess]);\n}\n","import { Box, Button, Container } from \"@chakra-ui/react\";\nimport { Contract } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport { tokenIdToFlag, tokenIdToCountry } from \"../utils/countries\";\nimport Countdown from \"react-countdown\";\nimport { getWhoAbandoned, interact } from \"../utils/tictactie\";\nimport useErrorMessage from \"../hooks/useErrorMessage\";\n\ntype GameStatusProps = {\n  contract: Contract | undefined;\n  tokenId: number | undefined;\n  opponentId: number | undefined;\n  isAccountTurn: boolean;\n  setRound: (round: number) => void;\n  setAbandoned: (abandoned: boolean) => void;\n  setOpponent: (opponentId: number | undefined) => void;\n};\n\nfunction GameStatus(props: GameStatusProps) {\n  const [expiresInSeconds, setExpiresInSeconds] = useState<number>();\n  const [whoAbandoned, setWhoAbandoned] = useState<number>(0);\n  const [error, setError] = useState<string>();\n  useErrorMessage(error);\n  const [isLoading, setIsLoadin] = useState<boolean>(false);\n\n  useEffect(() => {\n    (async () => {\n      if (props.contract && props.tokenId) {\n        await fetchExpiryBlock(props.contract, props.tokenId);\n      }\n    })();\n  }, [props.tokenId, props.contract, props.isAccountTurn]);\n\n  useEffect(() => {\n    (async () => {\n      if (props.opponentId) {\n        await checkAbandoned();\n      }\n    })();\n  }, [props.opponentId]);\n\n  useEffect(() => {\n    (async () => {\n      if (expiresInSeconds === 0) {\n        await checkAbandoned();\n      }\n    })();\n  }, [expiresInSeconds]);\n\n  async function fetchExpiryBlock(contract: Contract, tokenId: number) {\n    const epxirationBlock = await contract.expiryBlock(tokenId);\n    const currentBlock = await contract.provider.getBlockNumber();\n    setExpiresInSeconds((epxirationBlock.toNumber() - currentBlock) * 13);\n  }\n\n  async function checkAbandoned() {\n    if (props.tokenId) {\n      const abandoned = await getWhoAbandoned(props.contract, props.tokenId);\n      setWhoAbandoned(abandoned);\n      if (abandoned !== 0 && abandoned !== undefined) {\n        props.setAbandoned(true);\n      } else {\n        props.setAbandoned(false);\n      }\n    }\n  }\n\n  async function endGame() {\n    if (props.tokenId && props.contract) {\n      interact(\n        () => setIsLoadin(true),\n        (error) => setError(error),\n        async () => {\n          setIsLoadin(false);\n          props.setRound(0);\n          props.setAbandoned(false);\n          props.setOpponent(undefined);\n        },\n        async () => {\n          const victorious =\n            props.tokenId === whoAbandoned ? props.opponentId : props.tokenId;\n          return await props.contract!.endGame(victorious);\n        }\n      );\n    }\n  }\n\n  function renderContent() {\n    if (whoAbandoned === 0) {\n      return (\n        <Box>\n          {props.isAccountTurn ? (\n            <span>\n              <b>Your</b> turn.\n            </span>\n          ) : (\n            <span>\n              <b>Opponent</b>'s turn.\n            </span>\n          )}{\" \"}\n          Expires in{\" \"}\n          {expiresInSeconds && (\n            <Countdown\n              onComplete={() => setExpiresInSeconds(0)}\n              date={Date.now() + expiresInSeconds * 1000}\n            />\n          )}\n          <br />\n          {!props.isAccountTurn && <span>Come back later.</span>}\n        </Box>\n      );\n    } else if (whoAbandoned === props.tokenId) {\n      return (\n        <Box>\n          Your turn expired.{\" \"}\n          <Button\n            onClick={() => endGame()}\n            fontSize={12}\n            height=\"20px\"\n            isLoading={isLoading}\n          >\n            GIVE UP\n          </Button>{\" \"}\n          to play again.\n        </Box>\n      );\n    } else if (whoAbandoned === props.opponentId) {\n      return (\n        <Box>\n          Your opponent abandoned.{\" \"}\n          <Button\n            onClick={() => endGame()}\n            fontSize={12}\n            height=\"20px\"\n            isLoading={isLoading}\n          >\n            CLICK TO WIN\n          </Button>{\" \"}\n          and continue.\n        </Box>\n      );\n    }\n  }\n\n  function renderContainer() {\n    if (props.tokenId && props.opponentId) {\n      return (\n        <Container>\n          <span>\n            You are playing against {tokenIdToCountry(props.opponentId)}{\" \"}\n            {tokenIdToFlag(props.opponentId)}\n          </span>\n          <br />\n          {renderContent()}\n        </Container>\n      );\n    } else {\n      return <Box></Box>;\n    }\n  }\n\n  return renderContainer();\n}\n\nexport default GameStatus;\n","import \"./Body.css\";\nimport {\n  SimpleGrid,\n  Box,\n  Flex,\n  Spacer,\n  Image,\n  GridItem,\n  Button,\n  AspectRatio,\n} from \"@chakra-ui/react\";\nimport { Title } from \"./Title\";\nimport { useEffect, useState } from \"react\";\nimport Play from \"../Play/Play\";\nimport Challenge from \"../Challenge/Challenge\";\nimport Mint from \"../Mint/Mint\";\nimport RightPanel from \"../RightPanel/RightPanel\";\nimport { Contract, Signer } from \"ethers\";\nimport {\n  getSupply,\n  getOpponent,\n  getBoardSVGs,\n  isOwnerOf,\n} from \"../utils/tictactie\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\nimport MintTie from \"../MintTie/MintTie\";\nimport MintFinal from \"../MintFinal/MintFinal\";\nimport Board from \"../Board/Board\";\nimport SetBoard from \"../SetBoard/SetBoard\";\nimport GameStatus from \"../GameStatus/GameStatus\";\n\ntype BodyProps = {\n  contract: Contract | undefined;\n  contractReadOnly: Contract | undefined;\n  signer: Signer | undefined;\n  setDidConnect: (didConnect: boolean) => void;\n  didConnect: boolean;\n};\n\nfunction Body(props: BodyProps) {\n  const [contract, setContract] = useState<Contract>();\n  const [address, setAddress] = useState<string>();\n  const [supply, setSupply] = useState<number>();\n  const [tokenId, setTokenId] = useLocalStorage(\"tokenId\", undefined);\n  const [justMinted, setJustMinted] = useState(false);\n  const [abandoned, setAbandoned] = useState(false);\n  const [isAccountTurn, setIsAccountTurn] = useState(false);\n  const [round, setRound] = useState(0);\n  const [opponent, setOpponent] = useState<number>();\n  const [donation, setDonation] = useState<string>(\"0.0\");\n  const [boardSVGs, setBoardSVGs] = useState<string[] | undefined>();\n  const colors = [\n    \"violet\",\n    \"purple\",\n    \"blue\",\n    \"green\",\n    \"yellow\",\n    \"orange\",\n    \"red\",\n  ];\n\n  useEffect(() => {\n    (async () => {\n      if (props.contractReadOnly) {\n        setBoardSVGs(await getBoardSVGs(props.contractReadOnly));\n      }\n    })();\n  }, [props.contractReadOnly]);\n\n  useEffect(() => {\n    setContract(props.contract);\n  }, [props.contract]);\n\n  useEffect(() => {\n    (async () => {\n      setJustMinted(false);\n\n      const newAddress = await props.signer?.getAddress();\n\n      setAddress(newAddress);\n    })();\n  }, [props.signer]);\n\n  useEffect(() => {\n    (async () => {\n      if (contract && tokenId && address) {\n        if (await isOwnerOf(contract, parseInt(tokenId))) {\n          window.localStorage.setItem(address, JSON.stringify(tokenId));\n        } else {\n          window.localStorage.removeItem(\"tokenId\");\n          setTokenId(undefined);\n        }\n      }\n    })();\n  }, [tokenId, address, contract, setTokenId]);\n\n  useEffect(() => {\n    (async () => {\n      if (contract && tokenId) {\n        setOpponent(await getOpponent(contract, tokenId));\n      }\n    })();\n  }, [tokenId, contract]);\n\n  useEffect(() => {\n    (async () => {\n      if (props.contractReadOnly) {\n        setSupply(await getSupply(props.contractReadOnly));\n      }\n    })();\n  }, [justMinted, props.contractReadOnly]);\n\n  function isMinted(i: number) {\n    return (BigInt(supply || 0) & (BigInt(1) << BigInt(i))) !== BigInt(0);\n  }\n\n  function renderChallenge() {\n    if (!opponent && tokenId)\n      return (\n        <Challenge\n          contract={contract}\n          tokenId={tokenId}\n          setOpponent={setOpponent}\n        />\n      );\n  }\n\n  function renderPlay() {\n    if (opponent && tokenId && !abandoned)\n      return (\n        <Flex direction=\"column\" w=\"10%\" paddingLeft={5}>\n          <Play\n            contract={contract}\n            tokenId={tokenId}\n            setRound={setRound}\n            round={round}\n            setIsAccountTurn={setIsAccountTurn}\n            isAccountTurn={isAccountTurn}\n            setOpponent={setOpponent}\n          />\n        </Flex>\n      );\n    else return <Box></Box>;\n  }\n\n  function renderSetBoard() {\n    if (!tokenId)\n      return (\n        <SetBoard\n          contract={contract}\n          tokenId={tokenId}\n          setTokenId={setTokenId}\n        />\n      );\n  }\n\n  return (\n    <Box>\n      <Flex pb={5} pt={5}>\n        {props.didConnect && <Spacer />}\n        <Title>\n          There are{\" \"}\n          {70 -\n            (BigInt(supply || 0)\n              .toString(2)\n              .match(/1/g)?.length || 0)}{\" \"}\n          boards left\n        </Title>\n        <Spacer />\n        {!props.didConnect && (\n          <Button\n            backgroundColor=\"red\"\n            color=\"white\"\n            ml={5}\n            onClick={() => props.setDidConnect(true)}\n          >\n            CONNECT\n          </Button>\n        )}\n      </Flex>\n      <Flex>\n        <Flex direction=\"column\" w=\"20%\">\n          <Spacer />\n          <Board\n            contract={contract}\n            tokenId={tokenId}\n            round={round}\n            opponent={opponent}\n          />\n        </Flex>\n        {renderPlay()}\n        <Flex textAlign=\"left\" direction=\"column\" lineHeight={6}>\n          <Spacer />\n          {renderSetBoard()}\n          {renderChallenge()}\n          <GameStatus\n            contract={contract}\n            tokenId={tokenId}\n            isAccountTurn={isAccountTurn}\n            opponentId={opponent}\n            setRound={setRound}\n            setAbandoned={setAbandoned}\n            setOpponent={setOpponent}\n          />\n          <MintTie\n            contract={contract}\n            tokenId={tokenId}\n            isAccountTurn={isAccountTurn}\n            donation={donation}\n          />\n          <MintFinal\n            contract={contract}\n            tokenId={tokenId}\n            isAccountTurn={isAccountTurn}\n            donation={donation}\n            opponent={opponent}\n          />\n        </Flex>\n        <Spacer />\n        {!props.didConnect && (\n          <Image width={200} height={200} src=\"/ties.gif\" />\n        )}\n        <RightPanel\n          contract={contract}\n          setDonation={setDonation}\n          donation={donation}\n        />\n      </Flex>\n\n      <SimpleGrid columns={10} gap={2}>\n        {[...Array(70).keys()].map((i) => {\n          const tokenId = i + 1;\n          return (\n            <GridItem\n              colStart={(i % 10) + 1}\n              key={i}\n              rowStart={Math.floor(i / 10 + 4)}\n            >\n              <Box>\n                {boardSVGs && (\n                  <AspectRatio ratio={1}>\n                    <span dangerouslySetInnerHTML={{ __html: boardSVGs![i] }} />\n                  </AspectRatio>\n                )}\n                {!boardSVGs && (\n                  <Image\n                    src={\n                      \"/boards/board_\" + colors[Math.floor(i / 10)] + \"_4.svg\"\n                    }\n                  ></Image>\n                )}\n              </Box>\n\n              <Mint\n                tokenId={tokenId}\n                minted={isMinted(tokenId)}\n                setJustMinted={setJustMinted}\n                setTokenId={setTokenId}\n                contract={contract}\n              />\n            </GridItem>\n          );\n        })}\n      </SimpleGrid>\n    </Box>\n  );\n}\n\nexport default Body;\n","import { useState } from \"react\";\n\nexport function useLocalStorage(key: string, initialValue: any) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    if (typeof window === \"undefined\") {\n      return initialValue;\n    }\n\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: any) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      if (typeof window !== \"undefined\") {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      }\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport useCachedConnection from \"../hooks/useCachedConnection\";\nimport useEthereum from \"../hooks/useEthereum\";\nimport useEthereumReadOnly from \"../hooks/useEthereumReadOnly\";\nimport UserInfo from \"../UserInfo/UserInfo\";\nimport NetworkStatus from \"../NetworkStatus/NetworkStatus\";\nimport Body from \"../Body/Body\";\nimport { Container } from \"@chakra-ui/react\";\n\nfunction App() {\n  const cachedConnection = useCachedConnection();\n  const [didConnect, setDidConnect] = useState<boolean>(cachedConnection);\n  const [provider, signer, network, contract, rejected] =\n    useEthereum(didConnect);\n  const [contractReadOnly] = useEthereumReadOnly();\n  const [address, setAddress] = useState<string>();\n\n  useEffect(() => {\n    (async () => {\n      const newAddress = await signer?.getAddress();\n      setAddress(newAddress);\n    })();\n  }, [signer]);\n\n  useEffect(() => {\n    (async () => {\n      setDidConnect(provider !== undefined || cachedConnection);\n    })();\n  }, [provider, rejected, cachedConnection]);\n\n  return (\n    <div className=\"App\">\n      <NetworkStatus network={network} />\n      <Container maxWidth=\"130ch\">\n        <Body\n          signer={signer}\n          contract={contract}\n          contractReadOnly={contractReadOnly}\n          setDidConnect={setDidConnect}\n          didConnect={provider !== undefined}\n        />\n      </Container>\n      <UserInfo address={address} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// theme/index.js\nimport { extendTheme } from \"@chakra-ui/react\";\n\nconst PunchlineComponent = {\n  // The styles all Cards have in common\n  baseStyle: {\n    display: \"flex\",\n    color: \"purple\",\n    fontWeight: \"bold\",\n    fontSize: \"1.3em\",\n    lineHeight: \"2.4ch\",\n  },\n};\n\nconst TitleComponent = {\n  // The styles all Cards have in common\n  baseStyle: {\n    fontWeight: \"bold\",\n    p: \"2\",\n  },\n  variants: {\n    normal: {\n      backgroundColor: \"white\",\n      color: \"red\",\n    },\n    negative: {\n      backgroundColor: \"red\",\n      color: \"white\",\n    },\n  },\n  defaultProps: {\n    variant: \"normal\",\n  },\n};\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        fontFamily: \"monospace\",\n      },\n      a: {\n        textDecoration: \"dotted underline !important\",\n      },\n    },\n  },\n  radii: {\n    none: \"0\",\n    sm: \"0\",\n    base: \"0\",\n    md: \"0\",\n    lg: \"0\",\n    xl: \"0\",\n    \"2xl\": \"0\",\n    \"3xl\": \"0\",\n    full: \"0\",\n  },\n  components: {\n    PunchlineComponent,\n    TitleComponent,\n    Button: {\n      baseStyle: {\n        borderColor: \"black\",\n        transition: \"none\",\n        _focus: {\n          boxShadow: \"0 0 1px 1px black, 0 1px 1px black\",\n        },\n        _disabled: {\n          color: \"grey\",\n          borderColor: \"grey\",\n          bgColor: \"white\",\n        },\n      },\n      variants: {\n        outline: {\n          borderColor: \"green\",\n        },\n      },\n      defaultProps: {\n        variant: \"outline\",\n      },\n    },\n  },\n});\n\nexport default theme;\n","import { Container, Heading, Link } from \"@chakra-ui/react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction About() {\n  return (\n    <Container>\n      <br />\n      <Heading>About</Heading>\n      <br />\n      TicTacTie was born from a delirious discussion between{\" \"}\n      <Link href=\"https://twitter.com/the_innerspace\">\n        Inner Space\n      </Link> and{\" \"}\n      <Link href=\"https://twitter.com/Delirium_Tre\">Delirium Tremens</Link>, two\n      creatives based in Germany and Italy, with the help and support of a small\n      crew of Europe-based friends, crypto-enthusiasts and digital artists.\n      <br /> <br />\n      The aim was to show the power of on-chain NFTs off, while bringing to the\n      space a fun and addictive game and a message of peace.\n      <br />\n      <br />\n      What can be better than the classic Tic Tac Toe we all used to play since\n      we were kids? This is what they thought, and this is what they did.\n      <br />\n      <br />\n      The owners of each board will be able to play against each others, race\n      for the <NavLink to=\"/prize\">final price</NavLink> and, in the meanwhile,\n      win Ties from the unique NFT collection <b>hidden behind the game</b>.\n      <br />\n      <br />\n      Follow <Link href=\"https://twitter.com/tictactienft\">\n        @TicTacTieNFT\n      </Link>{\" \"}\n      on Twitter to share your feedbacks, get to know the team better and find\n      out more about future developments of the project.\n      <br />\n      <br />\n      <NavLink to=\"/peace\">Play games, not war</NavLink>.\n    </Container>\n  );\n}\n\nexport default About;\n","import {\n  Container,\n  Text,\n  Heading,\n  ListItem,\n  UnorderedList,\n  Link,\n} from \"@chakra-ui/react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Rules() {\n  return (\n    <Container>\n      <br />\n      <Heading>Rules</Heading>\n      <br />\n      <Text>\n        On top of the rules of the tic tac toe (that all of you probably already\n        know), there are some additional things to keep in mind, specific to\n        this version:\n      </Text>\n      <br />\n      <Heading size=\"md\">How can I play?</Heading>\n      <UnorderedList>\n        <ListItem>You need to mint or buy a board</ListItem>\n        <ListItem>\n          You first need to challenge someone, or wait to be challenged by\n          someone\n        </ListItem>\n      </UnorderedList>\n      <br />\n      <Heading size=\"md\">Who can I challenge?</Heading>\n      <UnorderedList>\n        <ListItem>Any board that is not playing</ListItem>\n        <ListItem>Any board that has an owner (no \"MINT\" button)</ListItem>\n        <ListItem>\n          You cannot challenge yourself or someone you just challenged\n        </ListItem>\n        <ListItem>You cannot challenge someone you just challenged</ListItem>\n      </UnorderedList>\n      <br />\n      <Heading size=\"md\">Is there a time limit?</Heading>\n      <UnorderedList>\n        <ListItem>There is a limited amount of time to make a move</ListItem>\n        <ListItem>The first game is 12h per turn</ListItem>\n        <ListItem>\n          After each tie, the time halven, down to a minimum of 30 minutes per\n          turn\n        </ListItem>\n      </UnorderedList>\n      <br />\n      <Heading size=\"md\">What happens if I make a tie</Heading>\n      <UnorderedList>\n        <ListItem>You will restart the game with the same opponent</ListItem>\n        <ListItem>The turn time will be half of what was previously</ListItem>\n        <ListItem>\n          You and your opponent will be granted with a ticket to mint one of\n          unique NFTs of the Ties collection (only 420 pieces)\n        </ListItem>\n      </UnorderedList>\n      <br />\n      <Heading size=\"md\">What happens if I win?</Heading>\n      <UnorderedList>\n        <ListItem>You gain a level</ListItem>\n      </UnorderedList>\n      <br />\n      <Heading size=\"md\">What happens if I lose?</Heading>\n      <UnorderedList>\n        <ListItem>You lose a level</ListItem>\n      </UnorderedList>\n      <br />\n      <Heading size=\"md\">What happens when my time is up?</Heading>\n      <UnorderedList>\n        <ListItem>\n          You lose. You or your opponent will have to declare to end of the game\n          for any of you to continue\n        </ListItem>\n        <ListItem>\n          Anyone really could declare the end of the game (call \"endGame\" on\n          etherscan)\n        </ListItem>\n      </UnorderedList>\n      <Heading size=\"md\">What happens when my time is up?</Heading>\n      <UnorderedList>\n        <ListItem>\n          You lose. You or your opponent will have to declare to end of the game\n          for any of you to continue\n        </ListItem>\n        <ListItem>\n          Anyone really could declare the end of the game (call \"endGame\" on\n          etherscan)\n        </ListItem>\n      </UnorderedList>\n      <br />\n      <Heading size=\"md\">What's the purpose of the levels?</Heading>\n      <UnorderedList>\n        <ListItem>\n          To give you pride (you can show off a more colorful board if the level\n          is higher)\n        </ListItem>\n        <ListItem>\n          A higher level means you usually can start the game first\n        </ListItem>\n        <ListItem>\n          At level 5 you can mint the <NavLink to=\"/prize\">Final Prize</NavLink>\n        </ListItem>\n      </UnorderedList>\n      <br />\n      <Heading size=\"md\">What happens if I have another question?</Heading>\n      <UnorderedList>\n        <ListItem>\n          You write a message to one of the authors:{\" \"}\n          <Link href=\"https://twitter.com/@the_innerspace\">\n            @the_innerspace\n          </Link>{\" \"}\n          or <Link href=\"https://twitter.com/Delirium_Tre\">@Delirium_Tre</Link>\n          on Twitter\n        </ListItem>\n        <ListItem>\n          You write an email to tictactie [at] posteo [dot] eu\n        </ListItem>\n      </UnorderedList>\n    </Container>\n  );\n}\n\nexport default Rules;\n","import { Container, Heading, Link, Image } from \"@chakra-ui/react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Ties() {\n  return (\n    <Container>\n      <br />\n      <Heading>Ties</Heading>\n      <br />\n      While developing the <NavLink to=\"/rules\">game</NavLink>, an idea crossed\n      the creators' minds: “What if we make it even more fun by giving something\n      special even if you don't win?”\n      <br />\n      <br />\n      And here is how the concept of tie was born. Making a tie (or draw) is\n      usually boring and a bit frustrating, but in this game this is the best\n      part! And what can be better than winning an actual NFT-tie, a unique\n      piece of digital art to collect and add to your wallet? (You got the pun?\n      Make a tie, get a tie!)\n      <br />\n      <br />\n      While you play your games in order to win the{\" \"}\n      <NavLink to=\"/prize\">big prize</NavLink>, whenever you make a tie you and\n      your opponent will get the chance to mint each one a unique NFT\n      representing tie.\n      <br />\n      <br />\n      <b>All the ties are unique and generated on-chain</b>. Different color\n      combinations, styles and animations for over 420 unique pieces that will\n      bring elegance to your wallet. Some styles are rarer than others.\n      <br />\n      <b>The \"Peace Tie\" being the rarest of them all.</b>\n      <br />\n      <br />\n      Each single tie will also have a small{\" \"}\n      <NavLink to=\"/peace\">peace flag</NavLink> in it, to spread one loud and\n      colorful message across the NFT space: make ties, not war.\n      <br />\n      <br />\n      Follow\n      <Link href=\"https://twitter.com/@TicTacTieNFT\" isExternal>\n        @TicTacTieNFT\n      </Link>{\" \"}\n      on Twitter to find out more about the future developments of the project.\n      <br />\n      <br />\n      <b>\n        Maybe one day our awesome ties will become a real-life thing to wear!\n      </b>\n      <br />\n      <br />\n      <Image width=\"100%\" src=\"/ties.gif\" />\n    </Container>\n  );\n}\n\nexport default Ties;\n","import { Container, Image, Link, Box, Heading } from \"@chakra-ui/react\";\n\nfunction Prize() {\n  return (\n    <Container>\n      <br />\n      <Heading>Prize</Heading>\n      <br />\n      <Box>\n        The first player reaching level 5 will be able to claim a piece of fine\n        NFT Art: <br />\n        <br />\n        <b>Homage #107</b> by{\" \"}\n        <Link\n          style={{ textDecoration: \"underline dotted\" }}\n          href=\"https://www.newrafael.com/\"\n          isExternal\n        >\n          Rafaël Rozendaal\n        </Link>\n        <br />\n        (collection{\" \"}\n        <Link\n          style={{ textDecoration: \"underline dotted\" }}\n          href=\"https://opensea.io/collection/homage-by-rafael-rozendaal\"\n        >\n          Homage\n        </Link>\n        , 2022)\n      </Box>\n      <br />\n      <Box>\n        <Image src=\"https://openseauserdata.com/files/342e67392cfebd08cf015c0e9b316e17.svg\"></Image>\n      </Box>\n      <br />\n      The NFT has been bought by the creators of TicTacTie and transferred to\n      the TicTacTie contract address. No one but the winner will be able to\n      claim it.\n    </Container>\n  );\n}\n\nexport default Prize;\n","import { Container, Link, Heading } from \"@chakra-ui/react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Peace() {\n  return (\n    <Container>\n      <br />\n      <Heading>Peace</Heading>\n      <br />\n      When conceiving the idea of the first NFT-based Tic Tac Toe game where\n      users actually own and get to keep the board, Russia started the invasion\n      of Ukraine and the horrible war began.\n      <br />\n      <br />\n      So the idea immediately changed into something more than just a{\" \"}\n      <NavLink to=\"/rules\">game</NavLink>: a way to literally{\" \"}\n      <b>paint the NFT space with the colors of peace.</b>\n      <br />\n      <br />\n      TicTacTie boards and all the game graphics are based off the 7 colors of\n      the <b>peace flag</b>. All the collectable{\" \"}\n      <NavLink to=\"/ties\">NFT-ties</NavLink> will bring small peace flags across\n      the NFT wallets all around the world.\n      <br />\n      <br />\n      The whole world is what this game wants to reach: each board has the name\n      and flag of a country that was involved in WW2.\n      <br />\n      <br />\n      <b>\n        Imagine if world leaders would settle their disputes with a Tic Tac Toe\n        game?\n      </b>\n      <br />\n      <br />\n      Let's play tic tac toe all together and conjure away the chance of another\n      world conflict.\n      <br />\n      <br />\n      <b>Art inspires people, money make them strive</b>. So with money we will\n      try to help the cause: we have let the <b>ties free to mint</b> so to\n      allow everyone to make a voluntary donation upon minting.\n      <br />\n      <br />\n      <b>\n        100% of these profits will be donated to{\" \"}\n        <Link href=\"https://meduza.io/en\">Meduza</Link>\n      </b>\n      , an indipendent publication that brings subkective and unbiased news to\n      Russian youth.\n      <br />\n      <br />\n      Each problem has short term and long term solutions, and we thought that\n      supporting good information is a way to prevent future support for\n      atrocities like the ones we are experiencing today. <br />\n      <br />\n      Make ties, not war.\n      <br />\n      <br />\n      PS: Feel free to donate more at{\" \"}\n      <Link href=\"https://support.meduza.io/en\">their website.</Link>.\n    </Container>\n  );\n}\n\nexport default Peace;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\n\nexport function Punchline(props: any) {\n  const { variant, ...rest } = props;\n\n  const styles = useStyleConfig(\"PunchlineComponent\", { variant });\n\n  // Pass the computed styles into the `__css` prop\n  return <Box __css={styles} {...rest} />;\n}\n","import \"./Header.css\";\nimport {\n  Box,\n  Flex,\n  Spacer,\n  Stack,\n  Container,\n  Image,\n  Link,\n} from \"@chakra-ui/react\";\nimport { Punchline } from \"./Punchline\";\nimport { NavLink } from \"react-router-dom\";\nimport { openSeaCollection } from \"../utils/links\";\n\nfunction Header() {\n  return (\n    <Container maxWidth=\"130ch\" marginBottom={5} marginTop={5}>\n      <Flex direction=\"row\">\n        <Flex>\n          <Box mr={3} ml={3}>\n            <NavLink to=\"/\">\n              <Image width={140} src=\"/logo_cold.png\" />\n            </NavLink>\n          </Box>\n          <Stack align=\"stretch\" justifyContent=\"left\" ml={4}>\n            <Box borderColor=\"black\"></Box>\n            <Punchline color=\"#B500D1\">\n              Welcome to the first 100% on-chain Tic Tac Toe NFT game.\n            </Punchline>\n            <Punchline color=\"#4500AD\">\n              Reach level 5 to claim the{\"‏‏‎ ‎\"}\n              <NavLink to=\"/prize\">final prize</NavLink>.\n            </Punchline>\n            <Punchline color=\"#008F07\">\n              Unlock the‏‏‎ ‎<NavLink to=\"/ties\">unique NFT Tie</NavLink>\n              {\"‏‏‎ ‎\"}\n              collection... By making ties!\n            </Punchline>\n            <Punchline color=\"#FF8C00\">\n              Mint your board and get on board. Make ties, not war.\n            </Punchline>\n          </Stack>\n        </Flex>\n        <Spacer />\n        <Flex\n          direction=\"column\"\n          textAlign=\"right\"\n          fontWeight=\"bold\"\n          color=\"\"\n          fontSize=\"1.1em\"\n          lineHeight=\"0.5em\"\n          style={{\n            textDecoration: \"underline dotted\",\n          }}\n        >\n          <Spacer />\n          <Box p={2}>\n            <Link href={openSeaCollection()} isExternal>\n              OPENSEA\n            </Link>\n          </Box>\n          <Box p={2}>\n            <NavLink to=\"/about\">ABOUT</NavLink>\n          </Box>\n          <Box p={2}>\n            <NavLink to=\"/rules\">RULES</NavLink>\n          </Box>\n          <Box p={2}>\n            <NavLink to=\"/prize\">PRIZE</NavLink>\n          </Box>\n          <Box p={2}>\n            <NavLink to=\"/ties\">TIES</NavLink>\n          </Box>\n          <Box p={2}>\n            <NavLink to=\"/peace\">PEACE</NavLink>\n          </Box>\n        </Flex>\n      </Flex>\n    </Container>\n  );\n}\n\nexport default Header;\n","import { Box, Flex, Container, Link, Spacer } from \"@chakra-ui/react\";\nimport { NavLink } from \"react-router-dom\";\nimport { openSeaCollection } from \"../utils/links\";\n\nfunction Footer() {\n  return (\n    <Container maxWidth=\"130ch\" marginBottom={5} marginTop={5}>\n      <Flex direction=\"row\">\n        <Box p={2}>\n          <Link href={openSeaCollection()} isExternal>\n            OPENSEA\n          </Link>\n        </Box>\n        <Spacer />\n        <Box p={2}>\n          <NavLink to=\"/about\">ABOUT</NavLink>\n        </Box>\n\n        <Spacer />\n        <Box p={2}>\n          <NavLink to=\"/follow\">FOLLOW US</NavLink>\n        </Box>\n\n        <Spacer />\n        <Box p={2}>\n          <NavLink to=\"/rules\">RULES</NavLink>\n        </Box>\n\n        <Spacer />\n        <Box p={2}>\n          <NavLink to=\"/prize\">PRIZE</NavLink>\n        </Box>\n\n        <Spacer />\n        <Box p={2}>\n          <NavLink to=\"/ties\">TIES</NavLink>\n        </Box>\n\n        <Spacer />\n        <Box p={2}>\n          <NavLink to=\"/peace\">PEACE</NavLink>\n        </Box>\n      </Flex>\n    </Container>\n  );\n}\n\nexport default Footer;\n","import { Box } from \"@chakra-ui/react\";\n\nfunction PeaceDivider() {\n  return (\n    <Box>\n      <Box height=\"3px\" bgColor=\"#B500D1\" />\n      <Box height=\"3px\" bgColor=\"#4500AD\" />\n      <Box height=\"3px\" bgColor=\"#00BFE6\" />\n      <Box height=\"3px\" bgColor=\"#008F07\" />\n      <Box height=\"3px\" bgColor=\"#FFD900\" />\n      <Box height=\"3px\" bgColor=\"#FF8C00\" />\n      <Box height=\"3px\" bgColor=\"#F50010\" />\n    </Box>\n  );\n}\n\nexport default PeaceDivider;\n","import {\n  Container,\n  Heading,\n  Link,\n  UnorderedList,\n  ListItem,\n} from \"@chakra-ui/react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Follow() {\n  return (\n    <Container>\n      <br />\n      <Heading>Follow us</Heading>\n      <br />\n      <br />\n      You can find all of us on Twitter! Soon maybe Discord too (if you want to\n      help us mod, let us know).\n      <br />\n      <br />\n      <UnorderedList>\n        <ListItem>\n          <Link href=\"https://twitter.com/the_innerspace\">Inner Space</Link>\n        </ListItem>\n        <ListItem>\n          <Link href=\"https://twitter.com/Delirium_Tre\">Delirium Tremens</Link>\n        </ListItem>\n        <ListItem>\n          <Link href=\"https://twitter.com/tictactienft\">\n            Official TicTacTie profile\n          </Link>\n        </ListItem>\n      </UnorderedList>\n    </Container>\n  );\n}\n\nexport default Follow;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme/index\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport About from \"./static/About\";\nimport Rules from \"./static/Rules\";\nimport Ties from \"./static/Ties\";\nimport Prize from \"./static/Prize\";\nimport Peace from \"./static/Peace\";\nimport Header from \"./Header/Header\";\nimport Footer from \"./Footer/Footer\";\nimport PeaceDivider from \"./PeaceDivider/PeaceDivider\";\nimport Follow from \"./static/Follow\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <Router>\n        <Header />\n        <PeaceDivider />\n        <Routes>\n          <Route path=\"/\" element={<App />} />\n          <Route path=\"/game\" element={<App />} />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/follow\" element={<Follow />} />\n          <Route path=\"/rules\" element={<Rules />} />\n          <Route path=\"/prize\" element={<Prize />} />\n          <Route path=\"/ties\" element={<Ties />} />\n          <Route path=\"/peace\" element={<Peace />} />\n        </Routes>\n        <br />\n        <br />\n        <PeaceDivider />\n        <Footer />\n      </Router>\n      {/*</Box>*/}\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}