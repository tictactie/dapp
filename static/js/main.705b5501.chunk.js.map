{"version":3,"sources":["hooks/useCachedConnection.tsx","hooks/useEthereum.tsx","UserInfo/UserInfo.tsx","NetworkStatus/NetworkStatus.tsx","Header/Punchline.tsx","Header/Header.tsx","Body/Title.tsx","utils/tictactie.tsx","Play/Play.tsx","utils/countries.tsx","Challenge/Challenge.tsx","Mint/Mint.tsx","MintTie/MintTie.tsx","MintFinal/MintFinal.tsx","hooks/useImageSVG.tsx","Board/Board.tsx","Tie/Tie.tsx","SetBoard/SetBoard.tsx","hooks/useAsync.tsx","GameStatus/GameStatus.tsx","Body/Body.tsx","hooks/useLocalStorage.tsx","App/App.tsx","reportWebVitals.ts","theme/index.tsx","index.tsx"],"names":["useCachedConnection","useState","alreadyConnected","setAlreadyConnected","useEffect","a","window","ethereum","tempProvider","Web3Provider","listAccounts","existingAccounts","length","ABI","useEthereum","requiresConnection","provider","setProvider","contract","setContract","signer","setSigner","accounts","setAccounts","rejected","setRejected","chainId","setChainId","network","setNetwork","resetSigner","newSigner","getSigner","getAddress","undefined","getNetwork","name","networkName","init","process","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","cacheProvider","connect","instance","newProvider","on","console","log","Contract","UserInfo","props","address","setAddress","className","NetworkStatus","NETWORK","isError","hidden","Punchline","variant","rest","styles","useStyleConfig","__css","Header","backgroundColor","p","mr","ml","align","justifyContent","Title","interact","onWait","onFailure","onSuccess","method","tx","wait","receipt","errorStarts","indexOf","errorEnds","substring","Error","message","includes","errorObj","JSON","parse","error","getDidWinEvent","filter","filters","DidWin","events","e","topics","args","getDidTieEvent","getSupply","mintable","BigNumber","from","supply","getOpponent","tokenId","response","toNumber","isTurn","isBoardTurn","isOwnerOf","ownerOf","getMintableTies","mintableTies","getVictoriesLeft","victories","Math","max","getWhoAbandoned","whoAbandoned","getBoardSVGs","getAllBoardsSVG","svgs","i","r","json","slice","svg","push","replace","Play","setTokenId","coordinate","setCoordinate","waiting","setWaiting","inputInvalid","setInputInvalid","setError","play","winEvent","tieEvent","setRound","setOpponent","round","updateTurn","setIsAccountTurn","direction","src","isInvalid","borderBottomColor","height","marginTop","placeholder","value","onChange","event","target","isLoading","isDisabled","isAccountTurn","onClick","width","COUNTRIES","FLAGS","countryToId","country","tokenIdToFlag","Challenge","setCountry","opponentId","challenge","fontSize","borderColor","Mint","minted","setJustMinted","minting","setMinting","ethers","utils","parseEther","mint","MintTie","setMintableTies","fetchMintableTies","nTies","mintTie","MintFinal","victoriesLeft","setVictoriesLeft","fetchVictoriesLeft","newVictoriesLeft","mintFinal","useImageSVG","imageSVG","setImageSVG","fetchImage","tokenURI","Board","ratio","dangerouslySetInnerHTML","__html","borderWidth","Tie","tieId","SetBoard","asyncFn","handleChange","handleClick","isActive","then","data","color","GameStatus","expiresInSeconds","setExpiresInSeconds","setWhoAbandoned","setIsLoadin","fetchExpiryBlock","expiryBlock","epxirationBlock","getBlockNumber","currentBlock","checkAbandoned","abandoned","setAbandoned","endGame","victorious","onComplete","date","Date","now","renderContainer","Body","setSupply","key","initialValue","item","localStorage","getItem","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","justMinted","opponent","setTieId","boardSVGs","setBoardSVGs","colors","isMinted","BigInt","newAddress","parseInt","removeItem","pb","pt","toString","match","w","paddingLeft","textAlign","lineHeight","renderSetBoard","renderChallenge","columns","gap","Array","keys","map","colStart","rowStart","floor","random","App","cachedConnection","didConnect","setDidConnect","maxWidth","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","global","body","fontFamily","radii","none","sm","base","md","lg","xl","full","components","PunchlineComponent","baseStyle","display","fontWeight","TitleComponent","variants","normal","negative","defaultProps","Button","transition","_focus","boxShadow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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ACEI,UAAWxB,EACXyB,YAAa9G,EAAM+G,cACnBC,QAtFwB,2CAuFxBvG,QAAQ,UACR6F,OAAO,OACPW,MAAM,OANR,SAQGjH,EAAM+G,cAAgB,OAAS,SAElC,wBACE1B,GAAW7C,GAAS,2CAAcA,SClHpC0E,GAAY,CAChB,UACA,QACA,QACA,WACA,UACA,UACA,WACA,UACA,WACA,QACA,YACA,SACA,SACA,cACA,eACA,SACA,iBACA,gBACA,YACA,UACA,QACA,WACA,aACA,OACA,qBACA,UACA,QACA,cACA,YACA,QACA,WACA,OACA,UACA,UACA,SACA,WACA,YACA,SACA,WACA,OACA,eACA,SACA,UACA,YACA,UACA,UACA,UACA,QACA,iBACA,UACA,UACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,YACA,aACA,UACA,kBACA,aACA,SACA,cACA,SACA,YACA,QACA,WACA,WAGIC,GAAQ,CACZ,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,4BAGK,SAASC,GAAYC,GAC1B,IAAI7D,EAAU2D,GAAMpF,QAAQsF,GAI5B,OAHiB,IAAb7D,IACFA,EAAU0D,GAAUnF,QAAQsF,IAEvB7D,EAAU,EAGZ,SAAS8D,GAAc9D,GAC5B,OAAO2D,GAAM3D,EAAU,GChEV+D,OA/Ef,SAAmBvH,GACjB,MAAgCxD,qBAAhC,mBAAOiB,EAAP,KAAiBC,EAAjB,KACA,EAA8BlB,qBAA9B,mBAAOgH,EAAP,KAAgB0B,EAAhB,KACA,EAA8B1I,oBAAS,GAAvC,mBAAO6I,EAAP,KAAgBC,EAAhB,KACA,EAA0B9I,qBAA1B,mBAAOgG,EAAP,KAAciD,EAAd,KACA,EAA8BjJ,mBAAS,IAAvC,mBAAO6K,EAAP,KAAgBG,EAAhB,KAEA,EAAwChL,oBAAS,GAAjD,mBAAO+I,EAAP,KAAqBC,EAArB,KAPwC,4CAiBxC,4BAAA5I,EAAA,0DACMyK,EADN,uBAEI7B,GAAgB,GACViC,EAAaL,GAAYC,GAHnC,SAIUK,EAAUD,GAJpB,6BAMIjC,GAAgB,GANpB,4CAjBwC,+BA2BzBkC,EA3ByB,8EA2BxC,WAAyBD,GAAzB,SAAA7K,EAAA,sDACMa,GAAY+F,IACdiC,OAAShH,GACT6G,GAAW,GAEXhE,GACE,kBAAMgE,GAAW,MACjB,SAAC9C,GAAD,OAAWiD,EAASjD,MACpB,WACE8C,GAAW,GACXtF,EAAM8F,YAAY2B,KALd,sBAON,sBAAA7K,EAAA,kEACea,EADf,KACkC+F,EADlC,KAC2CiE,EAD3C,SAEgBhK,EAASE,OAAOa,aAFhC,gCAEI6E,KAFJ,oBACwBqE,UADxB,gHAZN,2CA3BwC,wBAgDxC,OAvCA/K,qBAAU,WACRe,EAAYsC,EAAMvC,YACjB,CAACuC,EAAMvC,WAEVd,qBAAU,WACRuI,EAAWlF,EAAMwD,WAChB,CAACxD,EAAMwD,UAkCR,eAAC,IAAD,oCAEE,uBAFF,KAGK,IACH,cAAC,IAAD,CACEwD,QAtDkC,2CAuDlCH,UAAWxB,EACXsC,SAAU,GACVV,MAAM,MACNX,OAAO,OALT,uBAQU,IAZZ,IAaI,IACF,cAAC,IAAD,CACEF,UAAWb,EACXkB,MAAOY,EACPX,SA5De,SAACC,GAAD,OAAgBa,EAAWb,EAAMC,OAAOH,QA6DvDmB,YAAY,cACZvB,kBAAkB,QAClBC,OAAO,OACPqB,SAAU,GACVV,MAAM,MACNT,YAAY,qBAEZnB,GAAW7C,GAAS,2CAAcA,S,mBCf3BqF,OAzDf,YAMe,IALbrE,EAKY,EALZA,QACAsE,EAIY,EAJZA,OACAC,EAGY,EAHZA,cACA7C,EAEY,EAFZA,WACAzH,EACY,EADZA,SAEA,EAA8BjB,oBAAS,GAAvC,mBAAOwL,EAAP,KAAgBC,EAAhB,KACA,EAA0BzL,qBAA1B,mBAAOgG,EAAP,KAAciD,EAAd,KAFY,4CAIZ,WAAoBjC,GAApB,SAAA5G,EAAA,sDACMa,GACF6D,GACE,WACE2G,GAAW,GACXxC,OAAShH,MAEX,SAAC+D,GAAD,OAAWiD,EAASjD,MACpB,WACEyF,GAAW,GACXF,GAAc,GACd7C,EAAW1B,KATP,sBAWN,sBAAA5G,EAAA,kEACea,EADf,KAC8B+F,EAD9B,KAEW0E,KAAOC,MAAMC,WAClBtJ,SAHN,SAKgBrB,EAASE,OAAOa,aALhC,gCAEIiI,MAFJ,KAKIpD,KALJ,oBACyBgF,KADzB,0GAbN,2CAJY,wBA6BZ,OACE,sBAAKlI,UAAU,OAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE6G,QAAS,kBAjCL,2CAiCWqB,CAAK7E,IACpB8C,OAAO,OACPW,MAAM,MACNH,WAAYgB,IAAWrK,EACvBoJ,UAAWmB,EALb,SAOGF,EAAS,SAAW,UAEvB,cAAC,IAAD,CAAKb,MAAM,MAAMX,OAAO,OAAxB,SACGgB,GAAc9D,QAGnB,wBACEwE,GAAWxF,GAAS,2CAAcA,SC2B3B8F,OAlFf,SAAiBtI,GACf,MAAgCxD,qBAAhC,mBAAOiB,EAAP,KAAiBC,EAAjB,KACA,EAA8BlB,oBAAS,GAAvC,mBAAOwL,EAAP,KAAgBC,EAAhB,KACA,EAA8BzL,qBAA9B,mBAAOgH,EAAP,KAAgB0B,EAAhB,KACA,EAAwC1I,mBAAiB,GAAzD,mBAAOwH,EAAP,KAAqBuE,EAArB,KACA,EAA0B/L,qBAA1B,mBAAOgG,EAAP,KAAciD,EAAd,KALoC,SA6BrB+C,EA7BqB,gFA6BpC,WAAiC/K,EAAoB+F,GAArD,eAAA5G,EAAA,sEACsBmH,EAAgBtG,EAAU+F,GADhD,OACQiF,EADR,OAEEF,EAAgBE,GAFlB,2CA7BoC,oEAkCpC,WAAoBjF,GAApB,SAAA5G,EAAA,sDACMa,GACF6D,GACE,kBAAM2G,GAAW,MACjB,SAACzF,GAAD,OAAWiD,EAASjD,KAFd,sBAGN,sBAAA5F,EAAA,6DACEqL,GAAW,GADb,SAEQO,EAAkBxI,EAAMvC,SAAWuC,EAAMwD,SAFjD,2CAHM,sBAON,sBAAA5G,EAAA,kEACea,EADf,KACgC+F,EADhC,SAEgB/F,EAASE,OAAOa,aAFhC,gCAEI6E,KAFJ,oBACwBqF,QADxB,yGATN,2CAlCoC,wBA+EpC,OAxEA/L,qBAAU,WACR,sBAAC,sBAAAC,EAAA,0DACKoD,EAAMvC,WAAYuC,EAAMwD,QAD7B,gCAESgF,EAAkBxI,EAAMvC,SAAUuC,EAAMwD,SAFjD,6BAIG+E,EAAgB,GAJnB,0CAAD,KAOC,CAACvI,EAAMvC,SAAUuC,EAAMwD,QAASxD,EAAM+G,gBAEzCpK,qBAAU,WACRe,EAAYsC,EAAMvC,YACjB,CAACuC,EAAMvC,WAEVd,qBAAU,WACRuI,EAAWlF,EAAMwD,WAChB,CAACxD,EAAMwD,UAEV7G,qBAAU,WACRuI,EAAWlF,EAAMwD,WAChB,CAACQ,IA0BEA,EAAe,EAEf,eAAC,IAAD,WACE,wCADF,YAC0B,IACxB,eAAC,IAAD,CACEgD,QAAS,kBA1DiB,2CA0DXqB,CAAK7E,IACpBmE,SAAU,GACVrB,OAAO,OACPO,UAAWmB,EAJb,UAMGhE,EANH,oBAQA,wBACEgE,GAAWxF,GAAS,2CAAcA,SAIxC5C,QAAQC,IAAI,iBAEV,eAAC,IAAD,uBACW,kCADX,kDCCO8I,OAzEf,SAAmB3I,GACjB,MAA8BxD,oBAAS,GAAvC,mBAAOwL,EAAP,KAAgBC,EAAhB,KACA,EAA0CzL,mBAAiB,GAA3D,mBAAOoM,EAAP,KAAsBC,EAAtB,KACA,EAA0BrM,qBAA1B,mBAAOgG,EAAP,KAAciD,EAAd,KAHwC,SAazBqD,EAbyB,gFAaxC,WAAkCrL,EAAoB+F,GAAtD,eAAA5G,EAAA,sEACiCqH,EAAiBxG,EAAU+F,GAD5D,OACQuF,EADR,OAEEF,EAAiBE,GAFnB,4CAbwC,kEAkBxC,WAAoBvF,GAApB,SAAA5G,EAAA,sDACMoD,EAAMvC,UACR6D,GACE,kBAAM2G,GAAW,MACjB,SAACzF,GAAD,OAAWiD,EAASjD,MACpB,WACEyF,GAAW,KAJP,sBAMN,sBAAArL,EAAA,kEACeoD,EAAMvC,SADrB,KACyC+F,EADzC,SAEgBxD,EAAMvC,SAAUE,OAAOa,aAFvC,gCAEI6E,KAFJ,oBAC+B2F,UAD/B,yGARN,2CAlBwC,wBAsExC,OAjEArM,qBAAU,WACR,sBAAC,sBAAAC,EAAA,0DACKoD,EAAMvC,WAAYuC,EAAMwD,QAD7B,gCAESsF,EAAmB9I,EAAMvC,SAAUuC,EAAMwD,SAFlD,0CAAD,KAKC,CAACxD,EAAMwD,QAASxD,EAAMvC,SAAUuC,EAAM+G,gBAyBlB,GAAjB6B,EAEA,eAAC,IAAD,yBACa,uCAAU,EAAIA,KAD3B,cAEE,uBACA,wCAHF,oBAGkC,IAChC,cAAC,IAAD,CACE5B,QAAS,kBA3CqB,2CA2CfqB,CAAKrI,EAAMwD,UAC1BmE,SAAU,GACVrB,OAAO,OACPO,UAAWmB,EAJb,kCAQA,wBACEA,GAAWxF,GAAS,2CAAcA,QAKtC,eAAC,IAAD,WACGxC,EAAMwD,SACL,+CACa,uCAAU,EAAIoF,KAD3B,cAEE,0BAJN,YAOW,4BAAIA,IAPf,IAOmC5I,EAAMwD,SAAW,OAPpD,aAOsE,KAClExD,EAAMwD,SAAW,WARrB,+BCzCOyF,OAvBf,SACExL,EACA+F,EACAuC,GAEA,MAAgCvJ,qBAAhC,mBAAO0M,EAAP,KAAiBC,EAAjB,KADoB,SASLC,EATK,gFASpB,WAA0B3L,EAAoB+F,GAA9C,iBAAA5G,EAAA,6DACEgD,QAAQC,IAAI2D,GADd,SAEyB/F,EAAS4L,SAAS7F,GAF3C,OAEQC,EAFR,OAGMmB,EAAOtC,KAAKC,MAAMkB,EAASoB,MAAM,KACrCsE,EAAYvE,EAAI,OAJlB,2CAToB,wBAgBpB,OAbAjI,qBAAU,WACR,sBAAC,sBAAAC,EAAA,0DACKa,IAAY+F,EADjB,gCACgC4F,EAAW3L,EAAU+F,GADrD,0CAAD,KAGC,CAAC/F,EAAU+F,EAASuC,IAShBmD,GCgBMI,OA5Bf,SAAetJ,GACb,MAAgCxD,qBAAhC,mBAAOiB,EAAP,KAAiBC,EAAjB,KACA,EAA8BlB,qBAA9B,mBAAOgH,EAAP,KAAgB0B,EAAhB,KACMgE,EAAWD,GAAYxL,EAAU+F,EAASxD,EAAM+F,OAkBtD,OAhBApJ,qBAAU,WACRe,EAAYsC,EAAMvC,YACjB,CAACuC,EAAMvC,WAEVd,qBAAU,WACRuI,EAAWlF,EAAMwD,WAChB,CAACxD,EAAMwD,UAWR,cAAC,IAAD,UACE,cAAC,IAAD,CAAa+F,MAAO,EAApB,SATEL,EACK,sBAAMM,wBAAyB,CAAEC,OAAQP,KAEzC,cAAC,IAAD,CAAKQ,YAAa,EAAG9B,YAAY,eCA/B+B,OAlBf,SAAa3J,GACX,IAAMkJ,EAAWD,GAAYjJ,EAAMvC,SAAUuC,EAAM4J,MAAO,GAU1D,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAaL,MAAO,EAApB,SATEL,EACK,sBAAMM,wBAAyB,CAAEC,OAAQP,KAEzC,cAAC,IAAD,CAAKQ,YAAa,EAAG9B,YAAY,eC+D/BiC,OApEf,SAAkB7J,GAChB,ICXuB8J,EAAcrI,EDWrC,EAA8BjF,mBAAS,IAAvC,mBAAO6K,EAAP,KAAgBG,EAAhB,KACMuC,EAAe,SAACpD,GAAD,OAAgBa,EAAWb,EAAMC,OAAOH,QAC7D,EAA8BjK,qBAA9B,mBAAOyD,EAAP,KAAgBC,EAAhB,KACA,EAA0B1D,mBAAS,IAAnC,mBAAOgG,EAAP,KAAciD,EAAd,KACA,EAAwCjJ,oBAAS,GAAjD,mBAAO+I,EAAP,KAAqBC,EAArB,KALsC,4CAQtC,4BAAA5I,EAAA,gFACeoD,EAAMvC,gBADrB,aACe,EAAgBE,OAAOa,aADtC,oFARsC,+BAYvBwL,IAZuB,2EAYtC,8BAAApN,EAAA,0DACMyK,EADN,wBAEI7B,GAAgB,GAFpB,SAIYhC,EAAU4D,GAAYC,GAJlC,mBAK0BrH,EAAMvC,gBALhC,aAK0B,EAAgBqG,QAAQN,GALlD,gBAMoBvD,EACZD,EAAMkF,WAAW1B,GAEjBiC,EAAS,mBATjB,kDAYM7F,QAAQC,IAAR,MACA4F,EAAS,mBAbf,gCAgBID,GAAgB,GAhBpB,2DAZsC,sBAiEtC,OC3EuBsE,EDUe,2CCVDrI,EDgBhBvB,ECfrBvD,qBAAU,WACR,IAAIsN,GAAW,EAKf,OAJAH,IAAUI,MAAK,SAACC,GACVF,EAAUxI,EAAU0I,GACnBvK,QAAQC,IAAI,8CAEZ,WACLoK,GAAW,KAEZ,CAACH,EAASrI,IDiCPzB,EAAMwD,QACD,eAAC,IAAD,0BAAwB6D,EAAxB,OAGL,eAAC,IAAD,4CAEE,uBACA,cAAC,IAAD,CACEL,QAAO,sBAAE,sBAAApK,EAAA,sEAAkBoN,IAAlB,mFACTrC,SAAU,GACVV,MAAM,MACNX,OAAO,OAJT,oBAOU,IACV,cAAC,IAAD,CACEF,UAAWb,EACXkB,MAAOY,EACPX,SAAUqD,EACVnC,YAAY,cACZvB,kBAAkB,QAClBC,OAAO,OACPqB,SAAU,GACVV,MAAM,MACNT,YAAY,oBACJ,IACV,cAAC,IAAD,CAAM4D,MAAM,MAAZ,SAAmB5H,Q,UE4Fd6H,OAlJf,SAAoBrK,GAClB,MAAgDxD,qBAAhD,mBAAO8N,EAAP,KAAyBC,EAAzB,KACA,EAAwC/N,mBAAiB,GAAzD,mBAAO8H,EAAP,KAAqBkG,EAArB,KACA,EAA0BhO,qBAA1B,mBAAOgG,EAAP,KAAciD,EAAd,KACA,EAAiCjJ,oBAAkB,GAAnD,mBAAOqK,EAAP,KAAkB4D,EAAlB,KAJ0C,SA+B3BC,EA/B2B,gFA+B1C,WAAgCjN,EAAoB+F,GAApD,iBAAA5G,EAAA,sEACgCa,EAASkN,YAAYnH,GADrD,cACQoH,EADR,gBAE6BnN,EAASF,SAASsN,iBAF/C,OAEQC,EAFR,OAGEP,EAAkE,IAA7CK,EAAgBlH,WAAaoH,IAHpD,4CA/B0C,+BAqC3BC,IArC2B,2EAqC1C,4BAAAnO,EAAA,0DACMoD,EAAMwD,QADZ,gCAE4Ba,EAAgBrE,EAAMvC,SAAUuC,EAAMwD,SAFlE,OAEUwH,EAFV,OAGIR,EAAgBQ,GACE,IAAdA,QAAiCvM,IAAduM,EACrBhL,EAAMiL,cAAa,GAEnBjL,EAAMiL,cAAa,GAErBrL,QAAQC,IAAImL,GAThB,4CArC0C,+BAkD3BE,IAlD2B,2EAkD1C,sBAAAtO,EAAA,sDACMoD,EAAMwD,SAAWxD,EAAMvC,UACzB6D,GACE,kBAAMmJ,GAAY,MAClB,SAACjI,GAAD,OAAWiD,EAASjD,KAFd,sBAGN,sBAAA5F,EAAA,sDACE6N,GAAY,GACZzK,EAAM6F,SAAS,GACf7F,EAAMiL,cAAa,GACnBjL,EAAM8F,iBAAYrH,GAJpB,2CAHM,sBASN,4BAAA7B,EAAA,6DACQuO,EACJnL,EAAMwD,SAAWc,EAAetE,EAAMyH,WAAazH,EAAMwD,QAF7D,SAGexD,EAAMvC,SAAUyN,QAAQC,GAHvC,oFAXN,2CAlD0C,wBA+I1C,OAzIAxO,qBAAU,WACR,sBAAC,sBAAAC,EAAA,0DACKoD,EAAMvC,WAAYuC,EAAMwD,QAD7B,gCAESkH,EAAiB1K,EAAMvC,SAAUuC,EAAMwD,SAFhD,0CAAD,KAKC,CAACxD,EAAMwD,QAASxD,EAAMvC,WAEzBd,qBAAU,WACR,sBAAC,sBAAAC,EAAA,0DACKoD,EAAMyH,WADX,gCAESsD,IAFT,0CAAD,KAKC,CAAC/K,EAAMyH,aAEV9K,qBAAU,WACR,sBAAC,sBAAAC,EAAA,yDACCgD,QAAQC,IAAIyK,GACY,GAApBA,EAFL,gCAGSS,IAHT,0CAAD,KAMC,CAACT,IAkGJ,WACE,OAAItK,EAAMwD,SAAWxD,EAAMyH,WAEvB,eAAC,IAAD,uCVWyBjE,EUVmBxD,EAAMyH,WVWjDP,GAAU1D,EAAU,IUX0C,IAC5D8D,GAActH,EAAMyH,YACrB,uBA9De,IAAjBnD,EAEA,eAAC,IAAD,WACGtE,EAAM+G,cACL,iCACE,qCADF,YAIA,iCACE,yCADF,cAGC,IATL,aAUa,IACVuD,GACC,cAAC,KAAD,CACEc,WAAY,kBAAMb,EAAoB,IACtCc,KAAMC,KAAKC,MAA2B,IAAnBjB,IAGvB,wBACEtK,EAAM+G,eAAiB,sBAGpBzC,IAAiBtE,EAAMwD,QAE9B,eAAC,IAAD,gCACqB,IACnB,cAAC,IAAD,CACEwD,QAAS,kBAAMkE,KACfvD,SAAU,GACVrB,OAAO,OACPO,UAAWA,EAJb,qBAOU,IATZ,oBAaOvC,IAAiBtE,EAAMyH,WAE9B,eAAC,IAAD,sCAC2B,IACzB,cAAC,IAAD,CACET,QAAS,kBAAMkE,KACfvD,SAAU,GACVrB,OAAO,OACPO,UAAWA,EAJb,0BAOU,IATZ,wBAFG,GA0BCA,GAAarE,GAAS,2CAAcA,QAInC,cAAC,IAAD,IVEN,IAA0BgB,EUExBgI,ICoFMC,OAjNf,SAAczL,GAAmB,IAAD,EAC9B,EAAgCxD,qBAAhC,mBAAOiB,EAAP,KAAiBC,EAAjB,KACA,EAA8BlB,qBAA9B,mBAAOyD,EAAP,KAAgBC,EAAhB,KACA,EAA4B1D,qBAA5B,mBAAO8G,EAAP,KAAeoI,EAAf,KACA,ECrCK,SAAyBC,EAAaC,GAG3C,MAAsCpP,oBAAS,WAC7C,GAAsB,qBAAXK,OACT,OAAO+O,EAGT,IAEE,IAAMC,EAAOhP,OAAOiP,aAAaC,QAAQJ,GAEzC,OAAOE,EAAOvJ,KAAKC,MAAMsJ,GAAQD,EACjC,MAAOpJ,GAGP,OADA5C,QAAQC,IAAI2C,GACLoJ,MAbX,mBAAOI,EAAP,KAAoBC,EAApB,KAoCA,MAAO,CAACD,EAjBS,SAACvF,GAChB,IAEE,IAAMyF,EACJzF,aAAiB0F,SAAW1F,EAAMuF,GAAevF,EAEnDwF,EAAeC,GAEO,qBAAXrP,QACTA,OAAOiP,aAAaM,QAAQT,EAAKrJ,KAAK+J,UAAUH,IAElD,MAAO1J,GAEP5C,QAAQC,IAAI2C,MDEc8J,CAAgB,eAAW7N,GAAzD,mBAAO+E,EAAP,KAAgB0B,EAAhB,KACA,EAAoC1I,oBAAS,GAA7C,mBAAO+P,EAAP,KAAmBxE,EAAnB,KACA,EAAkCvL,oBAAS,GAA3C,mBAAOwO,EAAP,KAAkBC,EAAlB,KACA,EAA0CzO,oBAAS,GAAnD,mBAAOuK,EAAP,KAAsBd,EAAtB,KACA,EAA0BzJ,mBAAS,GAAnC,mBAAOuJ,EAAP,KAAcF,EAAd,KACA,EAAgCrJ,qBAAhC,mBAAOgQ,EAAP,KAAiB1G,EAAjB,KACA,EAA0BtJ,qBAA1B,mBAAOoN,EAAP,KAAc6C,EAAd,KACA,GAAkCjQ,qBAAlC,qBAAOkQ,GAAP,MAAkBC,GAAlB,MACMC,GAAS,CACb,SACA,SACA,OACA,QACA,SACA,SACA,OAkDF,SAASC,GAASnI,GAChB,OAAQoI,OAAOxJ,GAAU,GAAMwJ,OAAO,IAAMA,OAAOpI,MAASoI,OAAO,GA2CrE,OA3FAnQ,qBAAU,WACR,sBAAC,sBAAAC,EAAA,yDACCc,EAAYsC,EAAMvC,WAEduC,EAAMvC,SAHX,4BAIGkP,GAJH,SAIsBpI,GAAavE,EAAMvC,UAJzC,4EAAD,KAOC,CAACuC,EAAMvC,WAEVd,qBAAU,WACR,sBAAC,8BAAAC,EAAA,6DACCmL,GAAc,GADf,mBAG0B/H,EAAMrC,cAHhC,aAG0B,EAAca,aAHxC,OAGOuO,EAHP,OAKC7M,EAAW6M,GALZ,0CAAD,KAOC,CAAC/M,EAAMrC,SAEVhB,qBAAU,WACR,sBAAC,sBAAAC,EAAA,2DACKa,GAAY+F,GAAWvD,GAD5B,gCAEa4D,EAAUpG,EAAUuP,SAASxJ,IAF1C,kCAGK3G,OAAOiP,aAAaM,QAAQnM,EAASqC,KAAK+J,UAAU7I,IAHzD,sBAKK3G,OAAOiP,aAAamB,WAAW,WAC/B/H,OAAWzG,GANhB,0CAAD,KAUC,CAAC+E,EAASvD,EAASxC,EAAUyH,IAEhCvI,qBAAU,WACR,sBAAC,sBAAAC,EAAA,0DACKa,IAAY+F,EADjB,4BAEGsC,EAFH,SAEqBvC,EAAY9F,EAAU+F,GAF3C,4EAAD,KAKC,CAACA,EAAS/F,IAEbd,qBAAU,WACR,sBAAC,sBAAAC,EAAA,kEACC8O,EADD,SACiBxI,EAAUzF,GAD3B,4EAAD,KAGC,CAAC8O,EAAY9O,IA+Cd,eAAC,IAAD,WACE,eAAC,IAAD,CAAMyP,GAAI,EAAGC,GAAI,EAAjB,UACE,cAAC9L,EAAD,gDACA,cAAC,IAAD,IACA,eAACA,EAAD,uBACY,IACT,KACE,UAAAyL,OAAOxJ,GAAU,GACf8J,SAAS,GACTC,MAAM,aAFR,eAEelQ,SAAU,GAAI,IALlC,iBAQA,cAACkE,EAAD,CAAOZ,QAAQ,WAAWS,GAAI,EAA9B,4BAIF,eAAC,IAAD,WACE,eAAC,IAAD,CAAMgF,UAAU,SAASoH,EAAE,MAA3B,UACE,cAAC,IAAD,IACA,cAAC,GAAD,CAAO7P,SAAUA,EAAU+F,QAASA,EAASuC,MAAOA,OAhDtDyG,GAAYhJ,IAAYwH,EAExB,cAAC,IAAD,CAAM9E,UAAU,SAASoH,EAAE,MAAMC,YAAa,EAA9C,SACE,cAAC,GAAD,CACE9P,SAAUA,EACV+F,QAASA,EACTqC,SAAUA,EACVE,MAAOA,EACPE,iBAAkBA,EAClBc,cAAeA,EACfjB,YAAaA,MAIT,cAAC,IAAD,IAqCR,eAAC,IAAD,CAAM0H,UAAU,OAAOtH,UAAU,SAASuH,WAAY,EAAtD,UACE,cAAC,IAAD,IAnCR,WACE,IAAKjK,EACH,OACE,cAAC,GAAD,CACE/F,SAAUA,EACV+F,QAASA,EACT0B,WAAYA,IA8BXwI,GAjET,WACE,IAAKlB,GAAYhJ,EACf,OACE,cAAC,GAAD,CACE/F,SAAUA,EACV+F,QAASA,EACTsC,YAAaA,IA4DZ6H,GACD,cAAC,GAAD,CACElQ,SAAUA,EACV+F,QAASA,EACTuD,cAAeA,EACfU,WAAY+E,EACZ3G,SAAUA,EACVoF,aAAcA,EACdnF,YAAaA,IAEf,cAAC,GAAD,CACErI,SAAUA,EACV+F,QAASA,EACTiJ,SAAUA,EACV1F,cAAeA,IAEjB,cAAC,GAAD,CACEtJ,SAAUA,EACV+F,QAASA,EACTuD,cAAeA,OAGnB,cAAC,IAAD,IACA,cAAC,GAAD,CAAKtJ,SAAUA,EAAUmM,MAAOA,IAhClC,OAmCA,cAAC,IAAD,CAAYgE,QAAS,GAAIC,IAAK,EAA9B,SACG,YAAIC,MAAM,IAAIC,QAAQC,KAAI,SAACtJ,GAC1B,IAAMlB,EAAUkB,EAAI,EACpB,OACE,eAAC,IAAD,CACEuJ,SAAWvJ,EAAI,GAAM,EAErBwJ,SAAU/J,KAAKgK,MAAMzJ,EAAI,GAAK,GAHhC,UAKE,eAAC,IAAD,WACGgI,IACC,cAAC,IAAD,CAAanD,MAAO,EAApB,SACE,sBAAMC,wBAAyB,CAAEC,OAAQiD,GAAWhI,SAGtDgI,IACA,cAAC,IAAD,CACEvG,IACE,sBACAyG,GAAOzI,KAAKgK,MAAMzJ,EAAI,KADtB,MAICP,KAAKiK,SAAW,KAAO,QAAU,IAClC,YAMR,cAAC,GAAD,CACE5K,QAASA,EACTsE,OAAQ+E,GAASrJ,GACjBuE,cAAeA,EACf7C,WAAYA,EACZzH,SAAUA,MA5BPiH,YEjKJ2J,OAnCf,WACE,IAAMC,EAAmB/R,IACzB,EAAoCC,mBAAkB8R,GAAtD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EACEnR,EAAYkR,GADd,mBAAOhR,EAAP,KAAiBI,EAAjB,KAAyBQ,EAAzB,KAAkCV,EAAlC,KAA4CM,EAA5C,KAEA,EAA8BvB,qBAA9B,mBAAOyD,EAAP,KAAgBC,EAAhB,KAeA,OAbAvD,qBAAU,WACR,sBAAC,4BAAAC,EAAA,6EAC0Be,QAD1B,IAC0BA,OAD1B,EAC0BA,EAAQa,aADlC,OACOuO,EADP,OAEC7M,EAAW6M,GAFZ,0CAAD,KAIC,CAACpP,IAEJhB,qBAAU,WACR,sBAAC,sBAAAC,EAAA,sDACC4R,OAA2B/P,IAAblB,GAA0B+Q,GADzC,0CAAD,KAGC,CAAC/Q,EAAUQ,EAAUuQ,IAGtB,sBAAKnO,UAAU,MAAf,UACE,cAAC,EAAD,CAAehC,QAASA,IACxB,eAAC,IAAD,CAAWsQ,SAAS,QAApB,UACE,cAAC,EAAD,IACA,cAAC,GAAD,CAAM9Q,OAAQA,EAAQF,SAAUA,YAEpBgB,IAAblB,GACC,wBAAQyJ,QAAS,kBAAMwH,GAAc,IAArC,qBAEF,cAAC,EAAD,CAAUvO,QAASA,QC1BVyO,GAZS,SAACC,GACnBA,GAAeA,aAAuBxC,UACxC,8BAAqBjC,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,O,SC+DCM,GArCDC,aAAY,CACxBvO,OAAQ,CACNwO,OAAQ,CACNC,KAAM,CACJC,WAAY,eAIlBC,MAAO,CACLC,KAAM,IACNC,GAAI,IACJC,KAAM,IACNC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJ,MAAO,IACP,MAAO,IACPC,KAAM,KAERC,WAAY,CACVC,mBApDuB,CAEzBC,UAAW,CACTC,QAAS,OACT7F,MAAO,SACP8F,WAAY,OACZvI,SAAU,QACV8F,WAAY,UA8CZ0C,eA1CmB,CAErBH,UAAW,CACTE,WAAY,OACZlP,EAAG,KAELoP,SAAU,CACRC,OAAQ,CACNtP,gBAAiB,QACjBqJ,MAAO,OAETkG,SAAU,CACRvP,gBAAiB,MACjBqJ,MAAO,UAGXmG,aAAc,CACZ9P,QAAS,WA0BT+P,OAAQ,CACNR,UAAW,CACTpI,YAAa,QACb6I,WAAY,OACZC,OAAQ,CACNC,UAAW,uCAGfJ,aAAc,CACZ9P,QAAS,eC1DjBmQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,CAAgB7B,MAAOA,GAAvB,SAOE,cAAC,GAAD,QAIJ8B,SAASC,eAAe,SAM1BtC,O","file":"static/js/main.705b5501.chunk.js","sourcesContent":["import { Web3Provider } from \"@ethersproject/providers\";\nimport { useEffect, useState } from \"react\";\n\nfunction useCachedConnection() {\n  const [alreadyConnected, setAlreadyConnected] = useState<boolean>(false);\n\n  useEffect(() => {\n    (async () => {\n      if (window.ethereum) {\n        const tempProvider = new Web3Provider(window.ethereum);\n        const existingAccounts = await tempProvider.listAccounts();\n        setAlreadyConnected(existingAccounts.length > 0);\n      }\n\n      return setAlreadyConnected(false);\n    })();\n  }, []);\n\n  return alreadyConnected;\n}\n\nexport default useCachedConnection;\n","import { useState, useEffect } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport { JsonRpcSigner } from \"@ethersproject/providers/src.ts\";\nimport { Contract } from \"ethers\";\n\nconst CONTRACT_ADDRESS = process.env.REACT_APP_CONTRACT_ADDRESS!;\n\nconst ABI = [\n  \"function mint(uint256) public payable\",\n  \"function tokenURI(uint256) public view returns (string memory)\",\n  \"function mintable() public view returns (uint256)\",\n  \"event Transfer(address indexed, address indexed, uint)\",\n  \"event DidWin(address indexed from, uint256 indexed winningBoard, uint256 indexed losingBoard)\",\n  \"event DidTie(address indexed from, uint256 indexed board1, uint256 indexed board2)\",\n  \"function getOpponent(uint256 boardIndex) public view returns (uint256)\",\n  \"function expiryBlock(uint256) public view returns (uint256)\",\n  \"function balanceOf(address) public view returns (uint256)\",\n  \"function ownerOf(uint256 tokenId) public view returns (address)\",\n  \"function challenge(uint256, uint256) public\",\n  \"function isBoardTurn(uint256) public view returns (bool)\",\n  \"function getAllBoardsSVG() public view returns (string[70] memory)\",\n  \"function play(uint256, uint16) public\",\n  \"function mintableTies(uint256) public view returns (uint256)\",\n  \"function mintTie(uint256 boardIndex) public\",\n  \"function victories(uint256) public view returns (uint256)\",\n  \"function whoAbandoned(uint256 boardIndex) public view returns (uint256)\",\n  \"function endGame(uint256 boardIndex) public\",\n];\n\nfunction useEthereum(\n  requiresConnection: boolean\n): [\n  provider: JsonRpcProvider | undefined,\n  signer: JsonRpcSigner | undefined,\n  network: string | undefined,\n  contract: Contract | undefined,\n  rejected: boolean\n] {\n  const [provider, setProvider] = useState<JsonRpcProvider | undefined>();\n  const [contract, setContract] = useState<Contract>();\n  const [signer, setSigner] = useState<JsonRpcSigner | undefined>();\n  const [accounts, setAccounts] = useState<string[]>();\n  const [rejected, setRejected] = useState<boolean>(false);\n  const [chainId, setChainId] = useState<number>();\n  const [network, setNetwork] = useState<string>();\n\n  useEffect(() => {\n    (async () => {\n      async function resetSigner() {\n        try {\n          const newSigner = provider?.getSigner();\n          await newSigner?.getAddress();\n          setSigner(newSigner);\n        } catch {\n          setProvider(undefined);\n          setSigner(undefined);\n        }\n      }\n\n      await resetSigner();\n    })();\n  }, [provider, accounts]);\n\n  useEffect(() => {\n    (async () => {\n      const networkName = (await provider?.getNetwork())?.name;\n      setNetwork(networkName);\n    })();\n  }, [chainId, provider]);\n\n  useEffect(() => {\n    (async () => {\n      if (requiresConnection) {\n        async function init() {\n          try {\n            const INFURA_ID = process.env.REACT_APP_INFURA_ID;\n\n            const providerOptions = {\n              walletconnect: {\n                package: WalletConnectProvider,\n                options: {\n                  infuraId: INFURA_ID,\n                },\n              },\n            };\n\n            const web3Modal = new Web3Modal({\n              network: \"any\",\n              cacheProvider: true,\n              providerOptions,\n            });\n\n            const instance = await web3Modal.connect();\n            setRejected(false);\n\n            const newProvider = new Web3Provider(instance, \"any\");\n            setProvider(newProvider);\n\n            instance.on(\"accountsChanged\", async (accounts: string[]) => {\n              setAccounts(accounts);\n            });\n\n            instance.on(\"chainChanged\", async (chainId: number) => {\n              setChainId(chainId);\n            });\n          } catch {\n            console.log(\"connection failed\");\n            setRejected(true);\n          }\n        }\n\n        await init();\n      } else {\n        setProvider(undefined);\n      }\n    })();\n  }, [requiresConnection]);\n\n  useEffect(() => {\n    (async () => {\n      const contract = signer\n        ? new Contract(CONTRACT_ADDRESS, ABI, signer)\n        : undefined;\n      setContract(contract);\n    })();\n  }, [signer]);\n\n  return [provider, signer, network, contract, rejected];\n}\n\nexport default useEthereum;\n","import { useState, useEffect } from \"react\";\nimport \"./UserInfo.css\";\n\ntype UserInfoProps = {\n  address: string | undefined;\n};\n\nfunction UserInfo(props: UserInfoProps) {\n  const [address, setAddress] = useState<string>();\n\n  useEffect(() => {\n    setAddress(props.address);\n  }, [props.address]);\n\n  return (\n    <div className=\"UserInfo\">\n      <span>Connected account: {address}</span>\n    </div>\n  );\n}\n\nexport default UserInfo;\n","import { useState, useEffect } from \"react\";\nimport \"./NetworkStatus.css\";\n\ntype NetworkStatusProps = {\n  network: string | undefined;\n};\n\nfunction NetworkStatus(props: NetworkStatusProps) {\n  const NETWORK = process.env.REACT_APP_NETWORK;\n\n  const [network, setNetwork] = useState<string>();\n\n  useEffect(() => {\n    setNetwork(props.network);\n  }, [props.network]);\n\n  function isError() {\n    return NETWORK !== network && network !== undefined;\n  }\n\n  return (\n    <div className=\"NetworkStatus\" hidden={!isError()}>\n      {isError() && (\n        <div className=\"error-banner\">\n          <span className=\"error-text\">\n            You are connected to {network} whilst you should be connected to{\" \"}\n            {NETWORK}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default NetworkStatus;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\n\nexport function Punchline(props: any) {\n  const { variant, ...rest } = props;\n\n  const styles = useStyleConfig(\"PunchlineComponent\", { variant });\n\n  // Pass the computed styles into the `__css` prop\n  return <Box __css={styles} {...rest} />;\n}\n","import \"./Header.css\";\nimport { Box, Flex, Spacer, Stack } from \"@chakra-ui/react\";\nimport { Punchline } from \"./Punchline\";\n\nfunction Header() {\n  return (\n    <Box backgroundColor=\"lightgray\" p={5}>\n      <Flex>\n        <Spacer />\n        <Box p={2}>ABOUT</Box>\n        <Box p={2}>WHO WE ARE</Box>\n        <Box p={2}>TIC TAC TIPS</Box>\n        <Box p={2}>HELP UKRAINE</Box>\n      </Flex>\n      <Flex>\n        <Box mr={3} ml={3}>\n          Logo\n        </Box>\n        <Stack align=\"stretch\" justifyContent=\"left\" ml={3}>\n          <Punchline># the first NFT game where you own the board.</Punchline>\n          <Punchline>\n            # the first game where winning is fun, losing is fun and a tie is\n            fun too.\n          </Punchline>\n          <Punchline>\n            # the first thing you should do is to mint you board, and support\n            world peace.\n          </Punchline>\n        </Stack>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default Header;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\n\nexport function Title(props: any) {\n  const { variant, ...rest } = props;\n\n  const styles = useStyleConfig(\"TitleComponent\", { variant });\n\n  // Pass the computed styles into the `__css` prop\n  return <Box __css={styles} {...rest} />;\n}\n","import {\n  TransactionReceipt,\n  TransactionResponse,\n} from \"@ethersproject/providers\";\nimport { BigNumber, Contract, ContractReceipt } from \"ethers\";\n\ntype ContractError = Record<\"data\", Record<\"message\", string>>;\ntype MetamaskError = Record<\"message\", string>;\n\nexport async function interact(\n  onWait: () => any,\n  onFailure: (error: string | undefined) => any,\n  onSuccess: (receipt: ContractReceipt) => any,\n  method: () => any\n) {\n  try {\n    const tx = await method();\n    onWait();\n    const receipt = await tx.wait(1);\n    await onSuccess(receipt);\n  } catch (e) {\n    if (typeof e === \"string\") {\n      const errorStarts = e.indexOf(\"error=\") + 6;\n      const errorEnds = e.indexOf(\",code=\");\n\n      onFailure(e.substring(errorStarts, errorEnds));\n    } else if (e instanceof Error) {\n      console.log(e);\n      if (e.message.includes(\"insufficient funds\")) {\n        onFailure(\"Insufficient Funds\");\n        return;\n      }\n\n      const errorStarts = e.message.indexOf(\"error=\") + 6;\n      const errorEnds = e.message.indexOf(\", code=\");\n      const errorObj = JSON.parse(e.message.substring(errorStarts, errorEnds));\n      onFailure(errorObj[\"data\"][\"originalError\"][\"message\"]);\n    } else {\n      const error = e as MetamaskError | ContractError;\n      if (\"data\" in error) {\n        onFailure(error[\"data\"][\"message\"]);\n      } else {\n        onFailure(error[\"message\"]);\n      }\n    }\n  }\n}\n\nexport function getDidWinEvent(contract: Contract, receipt: ContractReceipt) {\n  const filter = contract.filters.DidWin(contract.address);\n  for (const e of receipt.events || []) {\n    if (\n      e.address === filter.address &&\n      // `filter.topics` is set\n      e.topics[0] === filter.topics![0]\n    ) {\n      return e.args![\"winningBoard\"] as BigNumber;\n    }\n  }\n}\n\nexport function getDidTieEvent(contract: Contract, receipt: ContractReceipt) {\n  const filter = contract.filters.DidWin(contract.address);\n  for (const e of receipt.events || []) {\n    if (\n      e.address === filter.address &&\n      // `filter.topics` is set\n      e.topics[0] === filter.topics![0]\n    ) {\n      return e.args![\"board1\"] as BigNumber;\n    }\n  }\n}\n\nexport async function getSupply(contract: Contract | undefined) {\n  if (contract) {\n    const supply = (await contract.mintable()) || BigNumber.from(0);\n\n    return supply;\n  }\n\n  return undefined;\n}\n\nexport async function getOpponent(contract: Contract, tokenId: number) {\n  const response = await contract.getOpponent(tokenId);\n  return response.toNumber();\n}\n\nexport async function isTurn(contract: Contract, tokenId: number) {\n  try {\n    const response = await contract.isBoardTurn(tokenId);\n    return response;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function isOwnerOf(contract: Contract, tokenId: number) {\n  try {\n    const response = await contract.ownerOf(tokenId);\n    return response === (await contract.signer.getAddress());\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function getMintableTies(contract: Contract, tokenId: number) {\n  try {\n    const response = await contract.mintableTies(tokenId);\n    return response.toNumber();\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function getVictoriesLeft(contract: Contract, tokenId: number) {\n  try {\n    const response = await contract.victories(tokenId);\n    return Math.max(0, 5 - response.toNumber());\n  } catch (e) {\n    console.log(e);\n    return 5;\n  }\n}\n\nexport async function getWhoAbandoned(\n  contract: Contract | undefined,\n  tokenId: number\n) {\n  try {\n    if (contract) {\n      const whoAbandoned = await contract.whoAbandoned(tokenId);\n      return whoAbandoned.toNumber();\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function getBoardSVGs(\n  contract: Contract\n): Promise<string[] | undefined> {\n  try {\n    const response = await contract.getAllBoardsSVG();\n    const svgs = [];\n    for (var i = 0; i < 70; i++) {\n      var r = response[i];\n      let json = JSON.parse(r.slice(16));\n      let svg = json[\"image\"];\n\n      svgs.push(\n        svg\n          .replace(/xo/g, \"xo\" + i)\n          .replace(/bg/g, \"bg\" + i)\n          .replace(/fg/g, \"fg\" + i)\n          .replace(/hash/g, \"hash\" + i)\n          .replace(/xoline/g, \"xoline\" + i)\n          .replace(/id='o'/g, `id='o${i}'`)\n          .replace(/id='x'/g, `id='x${i}'`)\n          .replace(/'#o'/g, `'#o${i}'`)\n          .replace(/'#x'/g, `'#x${i}'`)\n          .replace(/pulse/g, \"pulse\" + i)\n      );\n    }\n    return svgs;\n  } catch (e) {\n    console.log(e);\n  }\n}\n","import { Image, Flex, Input, Button, Spacer } from \"@chakra-ui/react\";\nimport { Contract, ContractReceipt } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport {\n  isTurn,\n  interact,\n  getDidWinEvent,\n  getDidTieEvent,\n} from \"../utils/tictactie\";\n\ntype PlayProps = {\n  contract: Contract | undefined;\n  tokenId: number;\n  round: number;\n  setRound: (round: number) => void;\n  isAccountTurn: boolean;\n  setIsAccountTurn: (isAccountTurn: boolean) => void;\n  setOpponent: (opponentId: number | undefined) => void;\n};\n\nfunction Play(props: PlayProps) {\n  const [contract, setContract] = useState<Contract>();\n  const [tokenId, setTokenId] = useState<number>();\n  const [coordinate, setCoordinate] = useState<number>();\n  const [waiting, setWaiting] = useState(false);\n  const [inputInvalid, setInputInvalid] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const handleChange = (event: any) => setCoordinate(event.target.value);\n\n  useEffect(() => {\n    setContract(props.contract);\n  }, [props.contract]);\n\n  useEffect(() => {\n    setTokenId(props.tokenId);\n  }, [props.tokenId]);\n\n  useEffect(() => {\n    (async () => {\n      if (contract && tokenId) {\n        await updateTurn(contract, tokenId);\n      }\n    })();\n  }, [tokenId, contract]);\n\n  async function handleClick() {\n    if (coordinate) {\n      setInputInvalid(false);\n      await play(coordinate);\n    } else {\n      setInputInvalid(true);\n    }\n  }\n\n  async function play(coordinate: number) {\n    if (contract && tokenId) {\n      setWaiting(false);\n      setError(undefined);\n      interact(\n        () => setWaiting(true),\n        (e) => setError(e),\n        async (receipt: ContractReceipt) => {\n          const winEvent = getDidWinEvent(contract, receipt);\n          const tieEvent = getDidTieEvent(contract, receipt);\n          if (!winEvent && !tieEvent) {\n            props.setRound(props.round + 1);\n          } else {\n            props.setRound(0);\n\n            if (winEvent) {\n              props.setOpponent(undefined);\n            }\n          }\n          setWaiting(false);\n          setError(undefined);\n          setCoordinate(undefined);\n          return await updateTurn(contract, tokenId);\n        },\n        async () => {\n          return await contract.play(tokenId, 1 << coordinate);\n        }\n      );\n    }\n  }\n\n  async function updateTurn(contract: Contract, tokenId: number) {\n    console.log(\"update turn\");\n    props.setIsAccountTurn(await isTurn(contract, tokenId));\n  }\n\n  return (\n    <Flex direction=\"column\">\n      <Spacer />\n      <Image src={\"/dapp/sample.svg\"}></Image>{\" \"}\n      <Input\n        isInvalid={inputInvalid}\n        borderBottomColor=\"black\"\n        height=\"50px\"\n        marginTop=\"15%\"\n        placeholder=\"#\"\n        value={coordinate || \"\"}\n        onChange={handleChange}\n      />\n      <Button\n        isLoading={waiting}\n        isDisabled={!props.isAccountTurn}\n        onClick={handleClick}\n        variant=\"outline\"\n        height=\"50px\"\n        width=\"100%\"\n      >\n        {props.isAccountTurn ? \"PLAY\" : \"WAIT\"}\n      </Button>\n      <br />\n      {!waiting && error && <span>ERROR: {error}</span>}\n    </Flex>\n  );\n}\n\nexport default Play;\n","const COUNTRIES = [\n  \"Germany\",\n  \"Italy\",\n  \"Japan\",\n  \"Bulgaria\",\n  \"Hungary\",\n  \"Romania\",\n  \"Slovakia\",\n  \"Austria\",\n  \"Ethiopia\",\n  \"China\",\n  \"Australia\",\n  \"Brazil\",\n  \"Canada\",\n  \"New Zealand\",\n  \"South Africa\",\n  \"Russia\",\n  \"United Kingdom\",\n  \"United States\",\n  \"Argentina\",\n  \"Bolivia\",\n  \"Chile\",\n  \"Colombia\",\n  \"Costa Rica\",\n  \"Cuba\",\n  \"Dominican Republic\",\n  \"Ecuador\",\n  \"Egypt\",\n  \"El Salvador\",\n  \"Guatemala\",\n  \"Haiti\",\n  \"Honduras\",\n  \"Iraq\",\n  \"Lebanon\",\n  \"Liberia\",\n  \"Mexico\",\n  \"Mongolia\",\n  \"Nicaragua\",\n  \"Panama\",\n  \"Paraguay\",\n  \"Peru\",\n  \"Saudi Arabia\",\n  \"Turkey\",\n  \"Uruguay\",\n  \"Venezuela\",\n  \"Algeria\",\n  \"Albania\",\n  \"Belgium\",\n  \"Burma\",\n  \"Czech Republic\",\n  \"Denmark\",\n  \"Estonia\",\n  \"Finland\",\n  \"France\",\n  \"Greece\",\n  \"Iceland\",\n  \"India\",\n  \"Iran\",\n  \"Latvia\",\n  \"Lithuania\",\n  \"Luxembourg\",\n  \"Morocco\",\n  \"The Netherlands\",\n  \"New Guinea\",\n  \"Norway\",\n  \"Philippines\",\n  \"Poland\",\n  \"Singapore\",\n  \"Syria\",\n  \"Thailand\",\n  \"Tunisia\",\n];\n\nconst FLAGS = [\n  \"🇩🇪\",\n  \"🇮🇹\",\n  \"🇯🇵\",\n  \"🇧🇬\",\n  \"🇭🇺\",\n  \"🇷🇴\",\n  \"🇸🇰\",\n  \"🇦🇹\",\n  \"🇪🇹\",\n  \"🇨🇳\",\n  \"🇦🇺\",\n  \"🇧🇷\",\n  \"🇨🇦\",\n  \"🇳🇿\",\n  \"🇿🇦\",\n  \"🇷🇺\",\n  \"🇬🇧\",\n  \"🇺🇸\",\n  \"🇦🇷\",\n  \"🇧🇴\",\n  \"🇨🇱\",\n  \"🇨🇴\",\n  \"🇨🇷\",\n  \"🇨🇺\",\n  \"🇩🇴\",\n  \"🇪🇨\",\n  \"🇪🇬\",\n  \"🇸🇻\",\n  \"🇬🇹\",\n  \"🇭🇹\",\n  \"🇭🇳\",\n  \"🇮🇶\",\n  \"🇱🇧\",\n  \"🇱🇷\",\n  \"🇲🇽\",\n  \"🇲🇳\",\n  \"🇳🇮\",\n  \"🇵🇦\",\n  \"🇵🇾\",\n  \"🇵🇪\",\n  \"🇸🇦\",\n  \"🇹🇷\",\n  \"🇺🇾\",\n  \"🇻🇪\",\n  \"🇩🇿\",\n  \"🇦🇱\",\n  \"🇧🇪\",\n  \"🇲🇲\",\n  \"🇨🇿\",\n  \"🇩🇰\",\n  \"🇪🇪\",\n  \"🇫🇮\",\n  \"🇫🇷\",\n  \"🇬🇷\",\n  \"🇮🇸\",\n  \"🇮🇳\",\n  \"🇮🇷\",\n  \"🇱🇻\",\n  \"🇱🇹\",\n  \"🇱🇺\",\n  \"🇲🇦\",\n  \"🇳🇱\",\n  \"🇵🇬\",\n  \"🇳🇴\",\n  \"🇵🇭\",\n  \"🇵🇱\",\n  \"🇸🇬\",\n  \"🇸🇾\",\n  \"🇹🇭\",\n  \"🇹🇳\",\n];\n\nexport function countryToId(country: string) {\n  var tokenId = FLAGS.indexOf(country);\n  if (tokenId === -1) {\n    tokenId = COUNTRIES.indexOf(country);\n  }\n  return tokenId + 1;\n}\n\nexport function tokenIdToFlag(tokenId: number) {\n  return FLAGS[tokenId - 1];\n}\n\nexport function tokenIdToCountry(tokenId: number) {\n  return COUNTRIES[tokenId - 1];\n}\n","import { Input, Button, Container } from \"@chakra-ui/react\";\nimport { Contract } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport { interact } from \"../utils/tictactie\";\nimport { countryToId } from \"../utils/countries\";\n\ntype ChallengeProps = {\n  contract: Contract | undefined;\n  tokenId: number;\n  setOpponent: (opponentId: number) => void;\n};\n\nfunction Challenge(props: ChallengeProps) {\n  const [contract, setContract] = useState<Contract>();\n  const [tokenId, setTokenId] = useState<number>();\n  const [waiting, setWaiting] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const [country, setCountry] = useState(\"\");\n  const handleChange = (event: any) => setCountry(event.target.value);\n  const [inputInvalid, setInputInvalid] = useState(false);\n\n  useEffect(() => {\n    setContract(props.contract);\n  }, [props.contract]);\n\n  useEffect(() => {\n    setTokenId(props.tokenId);\n  }, [props.tokenId]);\n\n  async function handleClick() {\n    if (country) {\n      setInputInvalid(false);\n      const opponentId = countryToId(country);\n      await challenge(opponentId);\n    } else {\n      setInputInvalid(true);\n    }\n  }\n\n  async function challenge(opponentId: number) {\n    if (contract && tokenId) {\n      setError(undefined);\n      setWaiting(false);\n\n      interact(\n        () => setWaiting(true),\n        (error) => setError(error),\n        () => {\n          setWaiting(false);\n          props.setOpponent(opponentId);\n        },\n        async () => {\n          return await contract.challenge(tokenId, opponentId, {\n            from: await contract.signer.getAddress(),\n          });\n        }\n      );\n    }\n  }\n\n  return (\n    <Container>\n      Wait to be challenged.\n      <br />\n      Or{\" \"}\n      <Button\n        onClick={handleClick}\n        isLoading={waiting}\n        fontSize={12}\n        width=\"20%\"\n        height=\"20px\"\n      >\n        challenge\n      </Button>{\" \"}\n      a{\" \"}\n      <Input\n        isInvalid={inputInvalid}\n        value={country}\n        onChange={handleChange}\n        borderColor=\"transparent\"\n        borderBottomColor=\"black\"\n        height=\"20px\"\n        fontSize={12}\n        width=\"40%\"\n        placeholder=\"Country or Flag\"\n      ></Input>\n      {!waiting && error && <span>ERROR: {error}</span>}\n    </Container>\n  );\n}\n\nexport default Challenge;\n","import { useState, useEffect } from \"react\";\nimport \"./Mint.css\";\nimport { Button, Box, HStack } from \"@chakra-ui/react\";\nimport { Contract, ethers } from \"ethers\";\nimport { tokenIdToFlag } from \"../utils/countries\";\nimport { interact } from \"../utils/tictactie\";\n\ntype MintProps = {\n  tokenId: number;\n  minted: boolean;\n  setJustMinted: (didMint: boolean) => void;\n  setTokenId: (tokenId: number) => void;\n  contract: Contract | undefined;\n};\nfunction Mint({\n  tokenId,\n  minted,\n  setJustMinted,\n  setTokenId,\n  contract,\n}: MintProps) {\n  const [minting, setMinting] = useState(false);\n  const [error, setError] = useState<string>();\n\n  async function mint(tokenId: number) {\n    if (contract) {\n      interact(\n        () => {\n          setMinting(true);\n          setError(undefined);\n        },\n        (error) => setError(error),\n        () => {\n          setMinting(false);\n          setJustMinted(true);\n          setTokenId(tokenId);\n        },\n        async () => {\n          return await contract!.mint(tokenId, {\n            value: ethers.utils.parseEther(\n              process.env.REACT_APP_PRICE || \"0.001\"\n            ),\n            from: await contract.signer.getAddress(),\n          });\n        }\n      );\n    }\n  }\n\n  return (\n    <div className=\"Mint\">\n      <HStack>\n        <Button\n          onClick={() => mint(tokenId)}\n          height=\"20px\"\n          width=\"80%\"\n          isDisabled={minted || !contract}\n          isLoading={minting}\n        >\n          {minted ? \"TAKEN.\" : \"MINT!\"}\n        </Button>\n        <Box width=\"20%\" height=\"20px\">\n          {tokenIdToFlag(tokenId)}\n        </Box>\n      </HStack>\n      <br />\n      {!minting && error && <span>ERROR: {error}</span>}\n    </div>\n  );\n}\n\nexport default Mint;\n","import { useState, useEffect } from \"react\";\nimport { Button, Container } from \"@chakra-ui/react\";\nimport { Contract } from \"ethers\";\nimport { interact, getMintableTies } from \"../utils/tictactie\";\n\ntype MintTieProps = {\n  tokenId: number | undefined;\n  contract: Contract | undefined;\n  setTieId: (tieId: number) => void;\n  isAccountTurn: boolean; // to refresh\n};\nfunction MintTie(props: MintTieProps) {\n  const [contract, setContract] = useState<Contract>();\n  const [minting, setMinting] = useState(false);\n  const [tokenId, setTokenId] = useState<number>();\n  const [mintableTies, setMintableTies] = useState<number>(0);\n  const [error, setError] = useState<string>();\n\n  useEffect(() => {\n    (async () => {\n      if (props.contract && props.tokenId)\n        await fetchMintableTies(props.contract, props.tokenId);\n      else {\n        setMintableTies(0);\n      }\n    })();\n  }, [props.contract, props.tokenId, props.isAccountTurn]);\n\n  useEffect(() => {\n    setContract(props.contract);\n  }, [props.contract]);\n\n  useEffect(() => {\n    setTokenId(props.tokenId);\n  }, [props.tokenId]);\n\n  useEffect(() => {\n    setTokenId(props.tokenId);\n  }, [mintableTies]);\n\n  async function fetchMintableTies(contract: Contract, tokenId: number) {\n    const nTies = await getMintableTies(contract, tokenId);\n    setMintableTies(nTies);\n  }\n\n  async function mint(tokenId: number) {\n    if (contract) {\n      interact(\n        () => setMinting(true),\n        (error) => setError(error),\n        async () => {\n          setMinting(false);\n          await fetchMintableTies(props.contract!, props.tokenId!);\n        },\n        async () => {\n          return await contract.mintTie(tokenId, {\n            from: await contract.signer.getAddress(),\n          });\n        }\n      );\n    }\n  }\n\n  function renderContent() {\n    if (mintableTies > 0) {\n      return (\n        <Container>\n          <b>Hurray!</b> You have{\" \"}\n          <Button\n            onClick={() => mint(tokenId!)}\n            fontSize={12}\n            height=\"20px\"\n            isLoading={minting}\n          >\n            {mintableTies} ties to MINT!\n          </Button>\n          <br />\n          {!minting && error && <span>ERROR: {error}</span>}\n        </Container>\n      );\n    } else {\n      console.log(\"mint tie == 0\");\n      return (\n        <Container>\n          You have <b>0</b> mintable ties. Play and tie to earn them.\n        </Container>\n      );\n    }\n  }\n\n  return renderContent();\n}\n\nexport default MintTie;\n","import { useState, useEffect } from \"react\";\nimport { Button, Container } from \"@chakra-ui/react\";\nimport { Contract } from \"ethers\";\nimport { interact, getVictoriesLeft } from \"../utils/tictactie\";\n\ntype MintFinalProps = {\n  tokenId: number;\n  contract: Contract | undefined;\n  isAccountTurn: boolean;\n};\n\nfunction MintFinal(props: MintFinalProps) {\n  const [minting, setMinting] = useState(false);\n  const [victoriesLeft, setVictoriesLeft] = useState<number>(5);\n  const [error, setError] = useState<string>();\n\n  useEffect(() => {\n    (async () => {\n      if (props.contract && props.tokenId) {\n        await fetchVictoriesLeft(props.contract, props.tokenId);\n      }\n    })();\n  }, [props.tokenId, props.contract, props.isAccountTurn]);\n\n  async function fetchVictoriesLeft(contract: Contract, tokenId: number) {\n    const newVictoriesLeft = await getVictoriesLeft(contract, tokenId);\n    setVictoriesLeft(newVictoriesLeft);\n  }\n\n  async function mint(tokenId: number) {\n    if (props.contract) {\n      interact(\n        () => setMinting(true),\n        (error) => setError(error),\n        () => {\n          setMinting(false);\n        },\n        async () => {\n          return await props.contract!.mintFinal(tokenId, {\n            from: await props.contract!.signer.getAddress(),\n          });\n        }\n      );\n    }\n  }\n\n  function renderContent() {\n    if (victoriesLeft == 0) {\n      return (\n        <Container>\n          You have a <b>level {5 - victoriesLeft}</b> board now.\n          <br />\n          <b>Hurray!</b> You have can now{\" \"}\n          <Button\n            onClick={() => mint(props.tokenId!)}\n            fontSize={12}\n            height=\"20px\"\n            isLoading={minting}\n          >\n            mint the Final Prize\n          </Button>\n          <br />\n          {!minting && error && <span>ERROR: {error}</span>}\n        </Container>\n      );\n    } else {\n      return (\n        <Container>\n          {props.tokenId && (\n            <span>\n              You have a <b>level {5 - victoriesLeft}</b> board now.\n              <br />\n            </span>\n          )}\n          You need <b>{victoriesLeft}</b> {props.tokenId && \"more\"} victories{\" \"}\n          {!props.tokenId && \"in a row\"} to win the Final Prize.\n        </Container>\n      );\n    }\n  }\n\n  return renderContent();\n}\n\nexport default MintFinal;\n","import { useState, useEffect } from \"react\";\nimport { Contract } from \"ethers\";\n\nfunction useImageSVG(\n  contract: Contract | undefined,\n  tokenId: number | undefined,\n  round: number\n): string | undefined {\n  const [imageSVG, setImageSVG] = useState<string>();\n\n  useEffect(() => {\n    (async () => {\n      if (contract && tokenId) await fetchImage(contract, tokenId);\n    })();\n  }, [contract, tokenId, round]);\n\n  async function fetchImage(contract: Contract, tokenId: number) {\n    console.log(tokenId);\n    const response = await contract.tokenURI(tokenId);\n    let json = JSON.parse(response.slice(16));\n    setImageSVG(json[\"image\"]);\n  }\n\n  return imageSVG;\n}\n\nexport default useImageSVG;\n","import { AspectRatio, Box } from \"@chakra-ui/react\";\nimport { Contract } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport useImageSVG from \"../hooks/useImageSVG\";\n\ntype BoardProps = {\n  contract: Contract | undefined;\n  tokenId: number;\n  round: number;\n};\n\nfunction Board(props: BoardProps) {\n  const [contract, setContract] = useState<Contract>();\n  const [tokenId, setTokenId] = useState<number>();\n  const imageSVG = useImageSVG(contract, tokenId, props.round);\n\n  useEffect(() => {\n    setContract(props.contract);\n  }, [props.contract]);\n\n  useEffect(() => {\n    setTokenId(props.tokenId);\n  }, [props.tokenId]);\n\n  function renderContent() {\n    if (imageSVG) {\n      return <span dangerouslySetInnerHTML={{ __html: imageSVG }} />;\n    } else {\n      return <Box borderWidth={2} borderColor=\"black\" />;\n    }\n  }\n\n  return (\n    <Box>\n      <AspectRatio ratio={1}>{renderContent()}</AspectRatio>\n    </Box>\n  );\n}\n\nexport default Board;\n","import { AspectRatio, Box } from \"@chakra-ui/react\";\nimport { Contract } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport useImageSVG from \"../hooks/useImageSVG\";\n\ntype TieProps = {\n  contract: Contract | undefined;\n  tieId: number | undefined;\n};\n\nfunction Tie(props: TieProps) {\n  const imageSVG = useImageSVG(props.contract, props.tieId, 0);\n\n  function renderContent() {\n    if (imageSVG) {\n      return <span dangerouslySetInnerHTML={{ __html: imageSVG }} />;\n    } else {\n      return <Box borderWidth={2} borderColor=\"black\" />;\n    }\n  }\n\n  return (\n    <Box>\n      <AspectRatio ratio={1}>{renderContent()}</AspectRatio>\n    </Box>\n  );\n}\n\nexport default Tie;\n","import { Input, Text, Button, Container } from \"@chakra-ui/react\";\nimport { Contract } from \"ethers\";\nimport { useState } from \"react\";\nimport { countryToId } from \"../utils/countries\";\nimport { useAsync } from \"../hooks/useAsync\";\n\ntype SetBoardProps = {\n  contract: Contract | undefined;\n  tokenId: number | undefined;\n  setTokenId: (tokenId: number) => void;\n};\n\nfunction SetBoard(props: SetBoardProps) {\n  const [country, setCountry] = useState(\"\");\n  const handleChange = (event: any) => setCountry(event.target.value);\n  const [address, setAddress] = useState<string>();\n  const [error, setError] = useState(\"\");\n  const [inputInvalid, setInputInvalid] = useState(false);\n  useAsync(getAddress, setAddress);\n\n  async function getAddress() {\n    return await props.contract?.signer.getAddress();\n  }\n\n  async function handleClick() {\n    if (country) {\n      setInputInvalid(false);\n      try {\n        const tokenId = countryToId(country);\n        const owner = await props.contract?.ownerOf(tokenId);\n        if (owner === address) {\n          props.setTokenId(tokenId);\n        } else {\n          setError(\"Not your board!\");\n        }\n      } catch (e) {\n        console.log(e);\n        setError(\"Not your board!\");\n      }\n    } else {\n      setInputInvalid(true);\n    }\n  }\n\n  function renderContent() {\n    if (props.tokenId) {\n      return <Container>Your board: {country}.</Container>;\n    } else {\n      return (\n        <Container>\n          Get a board. Already have one?\n          <br />\n          <Button\n            onClick={async () => await handleClick()}\n            fontSize={12}\n            width=\"20%\"\n            height=\"22px\"\n          >\n            Set it\n          </Button>{\" \"}\n          <Input\n            isInvalid={inputInvalid}\n            value={country}\n            onChange={handleChange}\n            borderColor=\"transparent\"\n            borderBottomColor=\"black\"\n            height=\"20px\"\n            fontSize={12}\n            width=\"40%\"\n            placeholder=\"Country or Flag\"\n          ></Input>{\" \"}\n          <Text color=\"red\">{error}</Text>\n        </Container>\n      );\n    }\n  }\n\n  return renderContent();\n}\n\nexport default SetBoard;\n","import { useEffect } from \"react\";\n\nexport function useAsync(asyncFn: any, onSuccess: any) {\n  useEffect(() => {\n    let isActive = true;\n    asyncFn().then((data: any) => {\n      if (isActive) onSuccess(data);\n      else console.log(\"aborted setState on unmounted component\");\n    });\n    return () => {\n      isActive = false;\n    };\n  }, [asyncFn, onSuccess]);\n}\n","import { Box, Button, Container } from \"@chakra-ui/react\";\nimport { Contract } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport { tokenIdToFlag, tokenIdToCountry } from \"../utils/countries\";\nimport Countdown from \"react-countdown\";\nimport { getWhoAbandoned, interact } from \"../utils/tictactie\";\n\ntype GameStatusProps = {\n  contract: Contract | undefined;\n  tokenId: number | undefined;\n  opponentId: number | undefined;\n  isAccountTurn: boolean;\n  setRound: (round: number) => void;\n  setAbandoned: (abandoned: boolean) => void;\n  setOpponent: (opponentId: number | undefined) => void;\n};\n\nfunction GameStatus(props: GameStatusProps) {\n  const [expiresInSeconds, setExpiresInSeconds] = useState<number>();\n  const [whoAbandoned, setWhoAbandoned] = useState<number>(0);\n  const [error, setError] = useState<string>();\n  const [isLoading, setIsLoadin] = useState<boolean>(false);\n\n  useEffect(() => {\n    (async () => {\n      if (props.contract && props.tokenId) {\n        await fetchExpiryBlock(props.contract, props.tokenId);\n      }\n    })();\n  }, [props.tokenId, props.contract]);\n\n  useEffect(() => {\n    (async () => {\n      if (props.opponentId) {\n        await checkAbandoned();\n      }\n    })();\n  }, [props.opponentId]);\n\n  useEffect(() => {\n    (async () => {\n      console.log(expiresInSeconds);\n      if (expiresInSeconds == 0) {\n        await checkAbandoned();\n      }\n    })();\n  }, [expiresInSeconds]);\n\n  async function fetchExpiryBlock(contract: Contract, tokenId: number) {\n    const epxirationBlock = await contract.expiryBlock(tokenId);\n    const currentBlock = await contract.provider.getBlockNumber();\n    setExpiresInSeconds((epxirationBlock.toNumber() - currentBlock) * 13);\n  }\n\n  async function checkAbandoned() {\n    if (props.tokenId) {\n      const abandoned = await getWhoAbandoned(props.contract, props.tokenId);\n      setWhoAbandoned(abandoned);\n      if (abandoned !== 0 && abandoned !== undefined) {\n        props.setAbandoned(true);\n      } else {\n        props.setAbandoned(false);\n      }\n      console.log(abandoned);\n    }\n  }\n\n  async function endGame() {\n    if (props.tokenId && props.contract) {\n      interact(\n        () => setIsLoadin(true),\n        (error) => setError(error),\n        async () => {\n          setIsLoadin(false);\n          props.setRound(0);\n          props.setAbandoned(false);\n          props.setOpponent(undefined);\n        },\n        async () => {\n          const victorious =\n            props.tokenId == whoAbandoned ? props.opponentId : props.tokenId;\n          return await props.contract!.endGame(victorious);\n        }\n      );\n    }\n  }\n\n  function renderContent() {\n    if (whoAbandoned === 0) {\n      return (\n        <Box>\n          {props.isAccountTurn ? (\n            <span>\n              <b>Your</b> turn.\n            </span>\n          ) : (\n            <span>\n              <b>Opponent</b>'s turn.\n            </span>\n          )}{\" \"}\n          Expires in{\" \"}\n          {expiresInSeconds && (\n            <Countdown\n              onComplete={() => setExpiresInSeconds(0)}\n              date={Date.now() + expiresInSeconds * 1000}\n            />\n          )}\n          <br />\n          {!props.isAccountTurn && \"Come back later.\"}\n        </Box>\n      );\n    } else if (whoAbandoned === props.tokenId) {\n      return (\n        <Box>\n          Your turn expired.{\" \"}\n          <Button\n            onClick={() => endGame()}\n            fontSize={12}\n            height=\"20px\"\n            isLoading={isLoading}\n          >\n            GIVE UP\n          </Button>{\" \"}\n          to play again.\n        </Box>\n      );\n    } else if (whoAbandoned === props.opponentId) {\n      return (\n        <Box>\n          Your opponent abandoned.{\" \"}\n          <Button\n            onClick={() => endGame()}\n            fontSize={12}\n            height=\"20px\"\n            isLoading={isLoading}\n          >\n            CLICK TO WIN\n          </Button>{\" \"}\n          and continue.\n        </Box>\n      );\n    }\n  }\n\n  function renderContainer() {\n    if (props.tokenId && props.opponentId) {\n      return (\n        <Container>\n          You are playing against {tokenIdToCountry(props.opponentId)}{\" \"}\n          {tokenIdToFlag(props.opponentId)}\n          <br />\n          {renderContent()}\n          {!isLoading && error && <span>ERROR: {error}</span>}\n        </Container>\n      );\n    } else {\n      return <Box></Box>;\n    }\n  }\n\n  return renderContainer();\n}\n\nexport default GameStatus;\n","import \"./Body.css\";\nimport {\n  SimpleGrid,\n  Box,\n  Flex,\n  Spacer,\n  Image,\n  GridItem,\n  AspectRatio,\n} from \"@chakra-ui/react\";\nimport { Title } from \"./Title\";\nimport { useEffect, useState } from \"react\";\nimport Play from \"../Play/Play\";\nimport Challenge from \"../Challenge/Challenge\";\nimport Mint from \"../Mint/Mint\";\nimport { Contract, Signer } from \"ethers\";\nimport {\n  getSupply,\n  getOpponent,\n  getBoardSVGs,\n  isOwnerOf,\n} from \"../utils/tictactie\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\nimport MintTie from \"../MintTie/MintTie\";\nimport MintFinal from \"../MintFinal/MintFinal\";\nimport Board from \"../Board/Board\";\nimport Tie from \"../Tie/Tie\";\nimport SetBoard from \"../SetBoard/SetBoard\";\nimport GameStatus from \"../GameStatus/GameStatus\";\n\ntype BodyProps = {\n  contract: Contract | undefined;\n  signer: Signer | undefined;\n};\n\nfunction Body(props: BodyProps) {\n  const [contract, setContract] = useState<Contract>();\n  const [address, setAddress] = useState<string>();\n  const [supply, setSupply] = useState<number>();\n  const [tokenId, setTokenId] = useLocalStorage(\"tokenId\", undefined);\n  const [justMinted, setJustMinted] = useState(false);\n  const [abandoned, setAbandoned] = useState(false);\n  const [isAccountTurn, setIsAccountTurn] = useState(false);\n  const [round, setRound] = useState(0);\n  const [opponent, setOpponent] = useState<number>();\n  const [tieId, setTieId] = useState<number>();\n  const [boardSVGs, setBoardSVGs] = useState<string[] | undefined>();\n  const colors = [\n    \"violet\",\n    \"purple\",\n    \"blue\",\n    \"green\",\n    \"yellow\",\n    \"orange\",\n    \"red\",\n  ];\n\n  useEffect(() => {\n    (async () => {\n      setContract(props.contract);\n\n      if (props.contract) {\n        setBoardSVGs(await getBoardSVGs(props.contract));\n      }\n    })();\n  }, [props.contract]);\n\n  useEffect(() => {\n    (async () => {\n      setJustMinted(false);\n\n      const newAddress = await props.signer?.getAddress();\n\n      setAddress(newAddress);\n    })();\n  }, [props.signer]);\n\n  useEffect(() => {\n    (async () => {\n      if (contract && tokenId && address) {\n        if (await isOwnerOf(contract, parseInt(tokenId))) {\n          window.localStorage.setItem(address, JSON.stringify(tokenId));\n        } else {\n          window.localStorage.removeItem(\"tokenId\");\n          setTokenId(undefined);\n        }\n      }\n    })();\n  }, [tokenId, address, contract, setTokenId]);\n\n  useEffect(() => {\n    (async () => {\n      if (contract && tokenId) {\n        setOpponent(await getOpponent(contract, tokenId));\n      }\n    })();\n  }, [tokenId, contract]);\n\n  useEffect(() => {\n    (async () => {\n      setSupply(await getSupply(contract));\n    })();\n  }, [justMinted, contract]);\n\n  function isMinted(i: number) {\n    return (BigInt(supply || 0) & (BigInt(1) << BigInt(i))) !== BigInt(0);\n  }\n\n  function renderChallenge() {\n    if (!opponent && tokenId)\n      return (\n        <Challenge\n          contract={contract}\n          tokenId={tokenId}\n          setOpponent={setOpponent}\n        />\n      );\n  }\n\n  function renderPlay() {\n    if (opponent && tokenId && !abandoned)\n      return (\n        <Flex direction=\"column\" w=\"10%\" paddingLeft={5}>\n          <Play\n            contract={contract}\n            tokenId={tokenId}\n            setRound={setRound}\n            round={round}\n            setIsAccountTurn={setIsAccountTurn}\n            isAccountTurn={isAccountTurn}\n            setOpponent={setOpponent}\n          />\n        </Flex>\n      );\n    else return <Box></Box>;\n  }\n\n  function renderSetBoard() {\n    if (!tokenId)\n      return (\n        <SetBoard\n          contract={contract}\n          tokenId={tokenId}\n          setTokenId={setTokenId}\n        />\n      );\n  }\n\n  return (\n    <Box>\n      <Flex pb={5} pt={5}>\n        <Title>Mint your board and get on board.</Title>\n        <Spacer />\n        <Title>\n          There are{\" \"}\n          {70 -\n            (BigInt(supply || 0)\n              .toString(2)\n              .match(/1/g)?.length || 0)}{\" \"}\n          boards left\n        </Title>\n        <Title variant=\"negative\" ml={5}>\n          Mint yours!\n        </Title>\n      </Flex>\n      <Flex>\n        <Flex direction=\"column\" w=\"20%\">\n          <Spacer />\n          <Board contract={contract} tokenId={tokenId} round={round} />\n        </Flex>\n        {renderPlay()}\n        <Flex textAlign=\"left\" direction=\"column\" lineHeight={6}>\n          <Spacer />\n          {renderSetBoard()}\n          {renderChallenge()}\n          <GameStatus\n            contract={contract}\n            tokenId={tokenId}\n            isAccountTurn={isAccountTurn}\n            opponentId={opponent}\n            setRound={setRound}\n            setAbandoned={setAbandoned}\n            setOpponent={setOpponent}\n          />\n          <MintTie\n            contract={contract}\n            tokenId={tokenId}\n            setTieId={setTieId}\n            isAccountTurn={isAccountTurn}\n          />\n          <MintFinal\n            contract={contract}\n            tokenId={tokenId}\n            isAccountTurn={isAccountTurn}\n          />\n        </Flex>\n        <Spacer />\n        <Tie contract={contract} tieId={tieId} />;\n      </Flex>\n\n      <SimpleGrid columns={10} gap={2}>\n        {[...Array(70).keys()].map((i) => {\n          const tokenId = i + 1;\n          return (\n            <GridItem\n              colStart={(i % 10) + 1}\n              key={i}\n              rowStart={Math.floor(i / 10 + 4)}\n            >\n              <Box>\n                {boardSVGs && (\n                  <AspectRatio ratio={1}>\n                    <span dangerouslySetInnerHTML={{ __html: boardSVGs![i] }} />\n                  </AspectRatio>\n                )}\n                {!boardSVGs && (\n                  <Image\n                    src={\n                      \"/dapp/boards/board_\" +\n                      colors[Math.floor(i / 10)] +\n                      \"_\" +\n                      4 +\n                      (Math.random() > 10.5 ? \"_play\" : \"\") +\n                      \".svg\"\n                    }\n                  ></Image>\n                )}\n              </Box>\n\n              <Mint\n                tokenId={tokenId}\n                minted={isMinted(tokenId)}\n                setJustMinted={setJustMinted}\n                setTokenId={setTokenId}\n                contract={contract}\n              />\n            </GridItem>\n          );\n        })}\n      </SimpleGrid>\n    </Box>\n  );\n}\n\nexport default Body;\n","import { useState } from \"react\";\n\nexport function useLocalStorage(key: string, initialValue: any) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    if (typeof window === \"undefined\") {\n      return initialValue;\n    }\n\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: any) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      if (typeof window !== \"undefined\") {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      }\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport useCachedConnection from \"../hooks/useCachedConnection\";\nimport useEthereum from \"../hooks/useEthereum\";\nimport UserInfo from \"../UserInfo/UserInfo\";\nimport NetworkStatus from \"../NetworkStatus/NetworkStatus\";\nimport Header from \"../Header/Header\";\nimport Body from \"../Body/Body\";\nimport { Container } from \"@chakra-ui/react\";\n\nfunction App() {\n  const cachedConnection = useCachedConnection();\n  const [didConnect, setDidConnect] = useState<boolean>(cachedConnection);\n  const [provider, signer, network, contract, rejected] =\n    useEthereum(didConnect);\n  const [address, setAddress] = useState<string>();\n\n  useEffect(() => {\n    (async () => {\n      const newAddress = await signer?.getAddress();\n      setAddress(newAddress);\n    })();\n  }, [signer]);\n\n  useEffect(() => {\n    (async () => {\n      setDidConnect(provider !== undefined || cachedConnection);\n    })();\n  }, [provider, rejected, cachedConnection]);\n\n  return (\n    <div className=\"App\">\n      <NetworkStatus network={network} />\n      <Container maxWidth=\"130ch\">\n        <Header />\n        <Body signer={signer} contract={contract} />\n      </Container>\n      {provider === undefined && (\n        <button onClick={() => setDidConnect(true)}>Connect</button>\n      )}\n      <UserInfo address={address} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// theme/index.js\nimport { extendTheme } from \"@chakra-ui/react\";\n\nconst PunchlineComponent = {\n  // The styles all Cards have in common\n  baseStyle: {\n    display: \"flex\",\n    color: \"purple\",\n    fontWeight: \"bold\",\n    fontSize: \"0.8em\",\n    lineHeight: \"1.5ch\",\n  },\n};\n\nconst TitleComponent = {\n  // The styles all Cards have in common\n  baseStyle: {\n    fontWeight: \"bold\",\n    p: \"2\",\n  },\n  variants: {\n    normal: {\n      backgroundColor: \"white\",\n      color: \"red\",\n    },\n    negative: {\n      backgroundColor: \"red\",\n      color: \"white\",\n    },\n  },\n  defaultProps: {\n    variant: \"normal\",\n  },\n};\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        fontFamily: \"monospace\",\n      },\n    },\n  },\n  radii: {\n    none: \"0\",\n    sm: \"0\",\n    base: \"0\",\n    md: \"0\",\n    lg: \"0\",\n    xl: \"0\",\n    \"2xl\": \"0\",\n    \"3xl\": \"0\",\n    full: \"0\",\n  },\n  components: {\n    PunchlineComponent,\n    TitleComponent,\n    Button: {\n      baseStyle: {\n        borderColor: \"black\",\n        transition: \"none\",\n        _focus: {\n          boxShadow: \"0 0 1px 1px black, 0 1px 1px black\",\n        },\n      },\n      defaultProps: {\n        variant: \"outline\",\n      },\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      {/*\n      <Box\n      animation={colorShiftAnimation}\n      background=\"linear-gradient(270deg, #FF0000, #FF8E00, #FFFF00, #008E00, #00C0C0, #400098, #8E008E);\"\n      backgroundSize=\"400% 400%\"\n      >*/}\n      <App />\n      {/*</Box>*/}\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}